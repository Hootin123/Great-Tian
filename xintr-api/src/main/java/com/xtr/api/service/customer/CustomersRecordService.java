package com.xtr.api.service.customer;

import com.xtr.api.domain.customer.CustomersRecordBean;
import com.xtr.api.dto.customer.CustomersDto;

import java.util.Date;
import java.util.List;
import java.util.Map;

/**
 * @author 王志新 robert.wang@xintairuan.com
 * @createTime:2016/8/12 17:55
 */
public interface CustomersRecordService {

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table customers_record
     *
     * @mbggenerated
     */
    CustomersRecordBean selectByPrimaryKey(Long recordId);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table customers_record
     *
     * @mbggenerated
     */
    int deleteByPrimaryKey(Long recordId);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table customers_record
     *
     * @mbggenerated
     */
    int insert(CustomersRecordBean record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table customers_record
     *
     * @mbggenerated
     */
    int insertSelective(CustomersRecordBean record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table customers_record
     *
     * @mbggenerated
     */
    int updateByPrimaryKeySelective(CustomersRecordBean record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table customers_record
     *
     * @mbggenerated
     */
    int updateByPrimaryKey(CustomersRecordBean record);

    /**
     * 根据用户id查询用户记录表
     * @param customerId
     * @return
     */
    CustomersRecordBean selectByCustomerId(Long customerId);

    /**
     *根据用户id查询记录,不包括删除的记录
     * @param customerId
     * @return
     */
    List<CustomersDto> selectRecordByCustomerId(Long customerId);

    /**
     * 批量插入员工记录信息
     * @param list
     * @return
     */
    int insertBatch(List<CustomersRecordBean> list);

    /**
     * 获取调薪人数
     * @param customersDto
     * @return
     */
    List<CustomersDto> selectRecordCountBySaraly(CustomersDto customersDto);

    /**
     * 查询所有的待调岗人数
     * @param  map
     * @return
     */
    List<CustomersRecordBean> selectTranferPosition(Map map);

    /**
     * 查询所有的待离职的人数
     * @param map
     * @return
     */
    List<CustomersRecordBean> selectDimission(Map map);

    /**
     * 批量获取待离职的员工
     * @param list
     * @return
     */
    List<CustomersRecordBean> selectWillLeaveBatch(List<Long> list,Date startDate);
}
