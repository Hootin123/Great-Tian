package com.xtr.core.persistence.writer.customer;

import com.xtr.api.domain.customer.CustomerShebaoOrderDescBean;
import org.apache.ibatis.annotations.Param;

import java.util.List;

public interface CustomerShebaoOrderDescWriterMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table customer_shebao_order_desc
     *
     * @mbggenerated
     */
    int deleteByPrimaryKey(Long id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table customer_shebao_order_desc
     *
     * @mbggenerated
     */
    int insert(CustomerShebaoOrderDescBean record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table customer_shebao_order_desc
     *
     * @mbggenerated
     */
    int insertSelective(CustomerShebaoOrderDescBean record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table customer_shebao_order_desc
     *
     * @mbggenerated
     */
    int updateByPrimaryKeySelective(CustomerShebaoOrderDescBean record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table customer_shebao_order_desc
     *
     * @mbggenerated
     */
    int updateByPrimaryKey(CustomerShebaoOrderDescBean record);

    /**
     * 根据公司订单ID和员工ID查询
     * @param companyOrderId
     * @param customerId
     * @return
     */
    CustomerShebaoOrderDescBean selectByCompanyOrderIdAndCustomerId(@Param("companyOrderId") long companyOrderId, @Param("customerId") long customerId);

    /**
     * 批量查询员工社保公积金汇总信息
     * @param companyOrderId
     * @param customerId
     * @return
     */
    List<CustomerShebaoOrderDescBean> selectBatchByCustomerAndCompanyOrder(@Param("companyOrderId") Long companyOrderId, @Param("customerId") String customerId);

    /**
     *批量新增员工社保公积金汇总信息
     * @param list
     * @return
     */
    int insertBatch(List<CustomerShebaoOrderDescBean> list);

    /**
     * 批量更新员工社保公积金汇总信息
     * @param list
     * @return
     */
    int updateBatch(List<CustomerShebaoOrderDescBean> list);

    /**
     * 批量更新员工的提交失败信息为空
     * @param companyShebaoOrderId
     * @param list
     * @return
     */
    int updateSbtStateBatch(@Param("companyShebaoOrderId") long companyShebaoOrderId,@Param("list") List<Long> list);

    /**
     * 批量更新员工的提交失败信息
     * @param companyShebaoOrderId
     * @param list
     * @return
     */
    int updateErrorTextBatchDetail(@Param("companyShebaoOrderId") long companyShebaoOrderId,@Param("list") List<CustomerShebaoOrderDescBean> list);

//    /**
//     *更新错误信息
//     * @param customerShebaoOrderDescBean
//     * @return
//     */
//    int updateErrorTextDetail(CustomerShebaoOrderDescBean customerShebaoOrderDescBean);

    /**
     * 取消社保公积金的异常信息
     * @param type
     * @param companyShebaoOrderId
     * @param customerId
     * @return
     */
    int updateErrorInfoEmpty(@Param("type") Integer type,@Param("companyShebaoOrderId") Long companyShebaoOrderId,@Param("customerId") Long customerId);

    /**
     * 更新汇总数据错误信息
     * @param customerShebaoOrderDescBean
     * @return
     */
    int updateErrorTextDetail(CustomerShebaoOrderDescBean customerShebaoOrderDescBean);

    /**
     *取消订单时清空错误信息
     * @param companyShebaoOrderId
     * @return
     */
    int updateErrorInfoEmptyForCancelOrder(long companyShebaoOrderId);


    int updateErrorInfoEmptyBatch(@Param("type") int type,@Param("companyShebaoOrderId") long companyShebaoOrderId,@Param("list") List<Long> list);
}