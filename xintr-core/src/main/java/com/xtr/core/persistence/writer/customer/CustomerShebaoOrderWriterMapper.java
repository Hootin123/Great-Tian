package com.xtr.core.persistence.writer.customer;

import com.xtr.api.domain.customer.CustomerShebaoOrderBean;
import org.apache.ibatis.annotations.Param;

import java.util.Date;
import java.util.List;

public interface CustomerShebaoOrderWriterMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table customer_shebao_order
     *
     * @mbggenerated
     */
    int deleteByPrimaryKey(Long id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table customer_shebao_order
     *
     * @mbggenerated
     */
    int insert(CustomerShebaoOrderBean record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table customer_shebao_order
     *
     * @mbggenerated
     */
    int insertSelective(CustomerShebaoOrderBean record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table customer_shebao_order
     *
     * @mbggenerated
     */
    int updateByPrimaryKeySelective(CustomerShebaoOrderBean record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table customer_shebao_order
     *
     * @mbggenerated
     */
    int updateByPrimaryKey(CustomerShebaoOrderBean record);


    /**
     * 删除历史订单
     * @param customerId
     * @param companyOrderId
     * @param requireType
     * @param orderType
     * @return
     */
    int deleteHisOrder(@Param("customerId") long customerId, @Param("companyOrderId") long companyOrderId, @Param("requireType") int requireType, @Param("orderType") String orderType);

    /**
     * 批量删除员工社保订单
     * @param customerId
     * @param companyOrderId
     * @param requireType
     * @param orderType
     * @return
     */
    int deleteBatch(@Param("customerId") String customerId, @Param("companyOrderId") long companyOrderId, @Param("requireType") int requireType, @Param("orderType") String orderType);

    /**
     * 批量新增员工社保公积金订单
     * @param list
     * @return
     */
    int insertBatch(List<CustomerShebaoOrderBean> list);

    /**
     * 批量更新员工订单的社保通状态
     * @param sbtStatus
     * @param companyShebaoOrderId
     * @param list
     * @return
     */
    int updateSbtStateBatch( @Param("sbtStatus") int sbtStatus, @Param("companyShebaoOrderId") long companyShebaoOrderId,@Param("list") List<Long> list);

    /**
     * 根据条件更新社保通状态
     * @param customerShebaoOrderBean
     * @return
     */
    int updateSbtStateByCondition(CustomerShebaoOrderBean customerShebaoOrderBean);


    /**
     * 根据公司ID 更新未扣除工资的 订单
     * @param companyId
     * @param payCycleId
     * @param month
     * @return
     */
    int updateNoPayrollOrder(@Param("companyId") Long companyId, @Param("payCycleId") Long payCycleId, @Param("orderMonth") Date month);

    /**
     * 社保通回调订单状态更新
     * @param companyOrderId
     * @param customerId
     * @param orderMonth
     * @param requireType
     *@param sbtStatus  @return
     */
    int updateSbtStateByNotifiy(@Param("companyOrderId") Long companyOrderId, @Param("customerId") Long customerId, @Param("orderMonth") Date orderMonth, @Param("sbtStatus") int sbtStatus, @Param("requireType") int requireType);

    /**
     * 根据相关条件更新员工订单的滞纳费
     * @param customerShebaoOrderBean
     * @return
     */
    int updateOverdueByCondition(CustomerShebaoOrderBean customerShebaoOrderBean);

    /**
     * 付款成功后更新社保通订单的状态
     * @return
     */
    int updateSbtStateForPayment(CustomerShebaoOrderBean customerShebaoOrderBean);

    /**
     * 更新社保公积金订单返回的错误消息
     * @param customerShebaoOrderBean
     * @return
     */
    int updateErrorMsg(CustomerShebaoOrderBean customerShebaoOrderBean);

    /**
     * 更新成功的社保公积金订单的错误消息为空
     * @param customerShebaoOrderBean
     * @return
     */
    int updateErrorMsgForNull(CustomerShebaoOrderBean customerShebaoOrderBean);

    /**
     * 批量更新成功的社保公积金订单的错误消息为空
     * @param list
     * @return
     */
    int updateErrorMsgForNullBatch(@Param("list") List<CustomerShebaoOrderBean> list);

    /**
     * 批量更新社保公积金订单返回的错误消息
     * @param list
     * @return
     */
    int updateErrorMsgBatch(@Param("list") List<CustomerShebaoOrderBean> list);

    /**
     *批量更新社保公积金订单返回的社保通企业与员工支付额度
     * @param list
     * @return
     */
    int updateShebaotongPayBatch(@Param("list") List<CustomerShebaoOrderBean> list);
}