package com.xtr.core.service.customer;

import com.xtr.api.domain.customer.CustomersPersonalBean;
import com.xtr.api.service.customer.CustomersPersonalService;
import com.xtr.core.persistence.reader.customer.CustomersPersonalReaderMapper;
import com.xtr.core.persistence.writer.customer.CustomersPersonalWriterMapper;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.stereotype.Service;
import org.springframework.transaction.annotation.Transactional;

import javax.annotation.Resource;

/**
 * @author 王志新 robert.wang@xintairuan.com
 * @createTime:2016/8/12 17:53
 */
@Service("customersPersonalService")
public class CustomersPersonalServiceImpl implements CustomersPersonalService {

    private static final Logger LOGGER = LoggerFactory.getLogger(CustomersPersonalServiceImpl.class);

    @Resource
    private CustomersPersonalReaderMapper customersPersonalReaderMapper;

    @Resource
    private CustomersPersonalWriterMapper customersPersonalWriterMapper;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table customers_personal
     *
     * @mbggenerated
     */
    public CustomersPersonalBean selectByPrimaryKey(Long personalId){
        return customersPersonalReaderMapper.selectByPrimaryKey(personalId);
    }
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table customers_personal
     *
     * @mbggenerated
     */
    @Transactional
    public int deleteByPrimaryKey(Long personalId){
        return customersPersonalWriterMapper.deleteByPrimaryKey(personalId);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table customers_personal
     *
     * @mbggenerated
     */
    @Transactional
    public int insert(CustomersPersonalBean record){
        return customersPersonalWriterMapper.insert(record);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table customers_personal
     *
     * @mbggenerated
     */
    @Transactional
    public int insertSelective(CustomersPersonalBean record){
        return customersPersonalWriterMapper.insertSelective(record);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table customers_personal
     *
     * @mbggenerated
     */
    @Transactional
    public int updateByPrimaryKeySelective(CustomersPersonalBean record){
        return customersPersonalWriterMapper.updateByPrimaryKeySelective(record);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table customers_personal
     *
     * @mbggenerated
     */
    @Transactional
    public int updateByPrimaryKey(CustomersPersonalBean record){
        return customersPersonalWriterMapper.updateByPrimaryKey(record);
    }

    /**
     * 根据用户id查询用户个人信息
     * @param customerId
     * @return
     */
    public CustomersPersonalBean selectByCustomerId(Long customerId){
        return customersPersonalReaderMapper.selectByCustomerId(customerId);
    }
}
