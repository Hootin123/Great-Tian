package com.xtr.core.service.customer;

import com.xtr.api.domain.customer.CustomersRecordBean;
import com.xtr.api.dto.customer.CustomersDto;
import com.xtr.api.service.customer.CustomersRecordService;
import com.xtr.core.persistence.reader.customer.CustomersRecordReaderMapper;
import com.xtr.core.persistence.writer.customer.CustomersRecordWriterMapper;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.stereotype.Service;

import javax.annotation.Resource;
import java.util.Date;
import java.util.List;
import java.util.Map;

/**
 * @author 王志新 robert.wang@xintairuan.com
 * @createTime:2016/8/12 17:54
 */
@Service("customersRecordService")
public class CustomersRecordServiceImpl implements CustomersRecordService {
    private static final Logger LOGGER = LoggerFactory.getLogger(CustomersRecordServiceImpl.class);

    @Resource
    private CustomersRecordReaderMapper customersRecordReaderMapper;

    @Resource
    private CustomersRecordWriterMapper customersRecordWriterMapper;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table customers_record
     *
     * @mbggenerated
     */
    public CustomersRecordBean selectByPrimaryKey(Long recordId){
        return customersRecordReaderMapper.selectByPrimaryKey(recordId);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table customers_record
     *
     * @mbggenerated
     */
    public int deleteByPrimaryKey(Long recordId){
        return customersRecordWriterMapper.deleteByPrimaryKey(recordId);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table customers_record
     *
     * @mbggenerated
     */
    public int insert(CustomersRecordBean record){
        return customersRecordWriterMapper.insert(record);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table customers_record
     *
     * @mbggenerated
     */
    public int insertSelective(CustomersRecordBean record){
        return customersRecordWriterMapper.insertSelective(record);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table customers_record
     *
     * @mbggenerated
     */
    public int updateByPrimaryKeySelective(CustomersRecordBean record){
        return customersRecordWriterMapper.updateByPrimaryKeySelective(record);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table customers_record
     *
     * @mbggenerated
     */
    public int updateByPrimaryKey(CustomersRecordBean record){
        return customersRecordWriterMapper.updateByPrimaryKey(record);
    }

    /**
     * 根据用户id查询用户记录表
     * @param customerId
     * @return
     */
    public CustomersRecordBean selectByCustomerId(Long customerId){
        return customersRecordReaderMapper.selectByCustomerId(customerId);
    }

    /**
     *根据用户id查询记录,不包括删除的记录
     * @param customerId
     * @return
     */
    public List<CustomersDto> selectRecordByCustomerId(Long customerId){
        return customersRecordReaderMapper.selectRecordByCustomerId(customerId);
    }

    /**
     * 批量插入员工记录信息
     * @param list
     * @return
     */
    public int insertBatch(List<CustomersRecordBean> list){
        return customersRecordWriterMapper.insertBatch(list);
    }

    /**
     * 获取调薪人数
     * @param customersDto
     * @return
     */
    public List<CustomersDto> selectRecordCountBySaraly(CustomersDto customersDto){
        return customersRecordReaderMapper.selectRecordCountBySaraly(customersDto);
    }

    /**
     * 查询前一天的所有待转正员工
     * map封装的时间
     * @return
     */
    @Override
    public List<CustomersRecordBean> selectTranferPosition(Map map) {
        return customersRecordReaderMapper.selectTranferPosition(map);
    }

    /**
     * 查询前一天的所有待离职的员工
     * @param
     * @return
     */
    @Override
    public List<CustomersRecordBean> selectDimission(Map map) {

        return customersRecordReaderMapper.selectDimission(map);
    }

    /**
     * 批量获取待离职的员工
     * @param list
     * @return
     */
    public List<CustomersRecordBean> selectWillLeaveBatch(List<Long> list,Date startDate){
        return customersRecordReaderMapper.selectWillLeaveBatch(list,startDate);
    }

}
