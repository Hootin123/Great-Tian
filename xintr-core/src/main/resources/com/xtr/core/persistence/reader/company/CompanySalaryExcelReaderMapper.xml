<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.xtr.core.persistence.reader.company.CompanySalaryExcelReaderMapper">
    <resultMap id="BaseResultMap" type="com.xtr.api.domain.company.CompanySalaryExcelBean">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        <id column="excel_id" property="excelId" jdbcType="BIGINT"/>
        <result column="excel_company_id" property="excelCompanyId" jdbcType="BIGINT"/>
        <result column="excel_dep_id" property="excelDepId" jdbcType="BIGINT"/>
        <result column="excel_year" property="excelYear" jdbcType="INTEGER"/>
        <result column="excel_month" property="excelMonth" jdbcType="INTEGER"/>
        <result column="excel_name" property="excelName" jdbcType="VARCHAR"/>
        <result column="excel_addtime" property="excelAddtime" jdbcType="TIMESTAMP"/>
        <result column="excel_state" property="excelState" jdbcType="INTEGER"/>
        <result column="excel_path" property="excelPath" jdbcType="VARCHAR"/>
        <result column="excel_addmember" property="excelAddmember" jdbcType="BIGINT"/>
        <result column="excel_salary_total" property="excelSalaryTotal" jdbcType="DECIMAL"/>
        <result column="excel_cost_total" property="excelCostTotal" jdbcType="DECIMAL"/>
        <result column="excel_audit_time_first" property="excelAuditTimeFirst" jdbcType="LONGVARCHAR"/>
        <result column="excel_audit_member_first" property="excelAuditMemberFirst" jdbcType="LONGVARCHAR"/>
        <result column="excel_audit_remark_first" property="excelAuditRemarkFirst" jdbcType="VARCHAR"/>
        <result column="excel_audit_time_second" property="excelAuditTimeSecond" jdbcType="LONGVARCHAR"/>
        <result column="excel_audit_member_second" property="excelAuditMemberSecond" jdbcType="LONGVARCHAR"/>
        <result column="excel_audit_remark_second" property="excelAuditRemarkSecond" jdbcType="VARCHAR"/>
        <result column="excel_audit_time_third" property="excelAuditTimeThird" jdbcType="VARCHAR"/>
        <result column="excel_audit_member_third" property="excelAuditMemberThird" jdbcType="VARCHAR"/>
        <result column="excel_audit_remark_third" property="excelAuditRemarkThird" jdbcType="VARCHAR"/>
        <result column="excel_grant_state" property="excelGrantState" jdbcType="INTEGER"/>
        <result column="excel_payday" property="excelPayday" jdbcType="TIMESTAMP"/>
        <result column="excel_addname" property="excelAddName" jdbcType="VARCHAR"/>
        <result column="excel_payroll_number" property="excelPayrollNumber" jdbcType="INTEGER"/>
        <result column="excel_group_name" property="excelGroupName" jdbcType="VARCHAR"/>
    </resultMap>
    <sql id="Base_Column_List">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        excel_id, excel_company_id, excel_dep_id, excel_year, excel_month, excel_name, excel_addtime,
        excel_state, excel_path, excel_addmember, excel_salary_total, excel_cost_total, excel_audit_time_first,
        excel_audit_member_first, excel_audit_remark_first, excel_audit_time_second, excel_audit_member_second,
        excel_audit_remark_second, excel_audit_time_third, excel_audit_member_third, excel_audit_remark_third,
        excel_grant_state,excel_payday,excel_payroll_number,excel_group_name
    </sql>

    <!-- 查询条件 -->
    <sql id="Example_Where_Clause">
        <if test="excelCompanyId != null">
            AND excel_company_id = #{excelCompanyId,jdbcType=BIGINT}
        </if>
        <if test="excelDepId != null">
            AND excel_dep_id = #{excelDepId,jdbcType=BIGINT}
        </if>
        <if test="excelYear != null">
            AND excel_year = #{excelYear,jdbcType=INTEGER}
        </if>
        <if test="excelMonth != null">
            AND excel_month = #{excelMonth,jdbcType=INTEGER}
        </if>
        <if test="excelName != null">
            AND excel_name = #{excelName,jdbcType=VARCHAR}
        </if>
        <if test="excelAddtime != null">
            AND excel_addtime = #{excelAddtime,jdbcType=TIMESTAMP}
        </if>
        <if test="excelState != null">
            AND excel_state = #{excelState,jdbcType=INTEGER}
        </if>
        <if test="excelPath != null">
            AND excel_path = #{excelPath,jdbcType=VARCHAR}
        </if>
        <if test="excelAddmember != null">
            AND excel_addmember = #{excelAddmember,jdbcType=BIGINT}
        </if>
        <if test="excelSalaryTotal != null">
            AND excel_salary_total = #{excelSalaryTotal,jdbcType=DECIMAL}
        </if>
        <if test="excelCostTotal != null">
            AND excel_cost_total = #{excelCostTotal,jdbcType=DECIMAL}
        </if>
        <if test="excelAuditTimeFirst != null">
            AND excel_audit_time_first = #{excelAuditTimeFirst,jdbcType=LONGVARCHAR}
        </if>
        <if test="excelAuditMemberFirst != null">
            AND excel_audit_member_first = #{excelAuditMemberFirst,jdbcType=LONGVARCHAR}
        </if>
        <if test="excelAuditRemarkFirst != null">
            AND excel_audit_remark_first = #{excelAuditRemarkFirst,jdbcType=VARCHAR}
        </if>
        <if test="excelAuditTimeSecond != null">
            AND excel_audit_time_second = #{excelAuditTimeSecond,jdbcType=LONGVARCHAR}
        </if>
        <if test="excelAuditMemberSecond != null">
            AND excel_audit_member_second = #{excelAuditMemberSecond,jdbcType=LONGVARCHAR}
        </if>
        <if test="excelAuditRemarkSecond != null">
            AND excel_audit_remark_second = #{excelAuditRemarkSecond,jdbcType=VARCHAR}
        </if>
        <if test="excelAuditTimeThird != null">
            AND excel_audit_time_third = #{excelAuditTimeThird,jdbcType=VARCHAR}
        </if>
        <if test="excelAuditMemberThird != null">
            AND excel_audit_member_third = #{excelAuditMemberThird,jdbcType=VARCHAR}
        </if>
        <if test="excelAuditRemarkThird != null">
            AND excel_audit_remark_third = #{excelAuditRemarkThird,jdbcType=VARCHAR}
        </if>
        <if test="excelGrantState != null">
            AND excel_grant_state = #{excelGrantState,jdbcType=INTEGER}
        </if>
        <if test="excelPayday != null">
            AND excel_payday = #{excelPayday,jdbcType=TIMESTAMP}
        </if>
        <if test="excelPayrollNumber != null">
            AND excel_payroll_number = #{excelPayrollNumber,jdbcType=INTEGER}
        </if>
        <if test="excelGroupName != null">
            AND excel_group_name = #{excelGroupName,jdbcType=VARCHAR}
        </if>
    </sql>
    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        select
        <include refid="Base_Column_List"/>
        from company_salary_excel
        where excel_id = #{excelId,jdbcType=BIGINT}
    </select>

    <!-- 分页查询-->
    <select id="selectPageList" resultMap="BaseResultMap"
            parameterType="com.xtr.api.domain.company.CompanySalaryExcelBean">
        SELECT
        <include refid="Base_Column_List"/>,company_members.member_logname as excel_addname
        FROM company_salary_excel ,company_members
        WHERE 1=1
        <include refid="Example_Where_Clause"/>
        and company_salary_excel.excel_addmember = company_members.member_id
        ORDER BY excel_addtime DESC
    </select>

    <!-- 获取待处理工资单-->
    <select id="getPendingPayroll" resultMap="BaseResultMap">
        SELECT
        <include refid="Base_Column_List"/>
        FROM company_salary_excel
        WHERE excel_payday &lt;= date(#{sameDay,jdbcType=VARCHAR}) AND excel_grant_state =
        #{excelGrantState,jdbcType=INTEGER}
    </select>

    <!-- 获取最后N次发工资-->
    <select id="getLastSalary" resultMap="BaseResultMap">
        SELECT
        <include refid="Base_Column_List"/>
        FROM company_salary_excel
        WHERE excel_grant_state = 2 and excel_company_id = #{companyId,jdbcType=BIGINT} order by excel_payday desc limit #{limit,jdbcType=INTEGER}
    </select>


    <!-- 获取待处理工资单-->
    <!--<select id="getPendingPayrollOnly" resultMap="BaseResultMap" parameterType="java.lang.String">-->
    <!--SELECT-->
    <!--<include refid="Base_Column_List"/>-->
    <!--FROM company_salary_excel-->
    <!--WHERE excel_payday &lt;= date(#{sameDay,jdbcType=VARCHAR}) AND excel_grant_state = #{excelGrantState,jdbcType=INTEGER}-->
    <!--</select>-->

    <!-- 根据企业编号获取发工资信息-->
    <select id="selectSalaryPageList" resultMap="BaseResultMap"
            parameterType="com.xtr.api.domain.company.CompanySalaryExcelBean">
        SELECT
        <include refid="Base_Column_List"/>
        FROM company_salary_excel
        WHERE
        <if test="companyId != null and companyId!='' ">
            excel_company_id = #{companyId,jdbcType=BIGINT}
        </if>
        order by excel_payday desc
    </select>

    <!--根据月份查询工资单 -->
    <select id="selectSalaryByMonth" resultMap="BaseResultMap">
        SELECT
        <include refid="Base_Column_List"/>
        FROM company_salary_excel
        WHERE
        excel_company_id = #{companyId,jdbcType=BIGINT}
        AND excel_month = #{excelMonth,jdbcType=INTEGER}
        AND excel_year = #{excelYear,jdbcType=INTEGER}
    </select>
</mapper>