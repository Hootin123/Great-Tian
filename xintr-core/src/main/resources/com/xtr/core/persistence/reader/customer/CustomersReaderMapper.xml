<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.xtr.core.persistence.reader.customer.CustomersReaderMapper">
    <resultMap id="BaseResultMap" type="com.xtr.api.domain.customer.CustomersBean">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        <id column="customer_id" property="customerId" jdbcType="BIGINT"/>
        <result column="customer_company_id" property="customerCompanyId" jdbcType="BIGINT"/>
        <result column="customer_company_name" property="customerCompanyName" jdbcType="VARCHAR"/>
        <result column="customer_dep_parentid" property="customerDepParentid" jdbcType="BIGINT"/>
        <result column="customer_dep_parentname" property="customerDepParentname" jdbcType="VARCHAR"/>
        <result column="customer_dep_id" property="customerDepId" jdbcType="BIGINT"/>
        <result column="customer_dep_name" property="customerDepName" jdbcType="VARCHAR"/>
        <result column="customer_number" property="customerNumber" jdbcType="VARCHAR"/>
        <result column="customer_logname" property="customerLogname" jdbcType="VARCHAR"/>
        <result column="customer_password" property="customerPassword" jdbcType="VARCHAR"/>
        <result column="customer_password_strength" property="customerPasswordStrength" jdbcType="INTEGER"/>
        <result column="customer_turename" property="customerTurename" jdbcType="VARCHAR"/>
        <result column="customer_join_time" property="customerJoinTime" jdbcType="TIMESTAMP"/>
        <result column="customer_salary" property="customerSalary" jdbcType="DECIMAL"/>
        <result column="customer_place" property="customerPlace" jdbcType="VARCHAR"/>
        <result column="customer_worktype" property="customerWorktype" jdbcType="VARCHAR"/>
        <result column="customer_sex" property="customerSex" jdbcType="INTEGER"/>
        <result column="customer_birthday" property="customerBirthday" jdbcType="DATE"/>
        <result column="customer_idcard" property="customerIdcard" jdbcType="VARCHAR"/>
        <result column="customer_idcard_img_front" property="customerIdcardImgFront" jdbcType="VARCHAR"/>
        <result column="customer_idcard_img_back" property="customerIdcardImgBack" jdbcType="VARCHAR"/>
        <result column="customer_phone" property="customerPhone" jdbcType="VARCHAR"/>
        <result column="customer_email" property="customerEmail" jdbcType="VARCHAR"/>
        <result column="customer_qq" property="customerQq" jdbcType="VARCHAR"/>
        <result column="customer_bank" property="customerBank" jdbcType="VARCHAR"/>
        <result column="customer_bankarea" property="customerBankarea" jdbcType="VARCHAR"/>
        <result column="customer_banknumber" property="customerBanknumber" jdbcType="VARCHAR"/>
        <result column="customer_contacts" property="customerContacts" jdbcType="VARCHAR"/>
        <result column="customer_edu" property="customerEdu" jdbcType="VARCHAR"/>
        <result column="customer_address" property="customerAddress" jdbcType="VARCHAR"/>
        <result column="customer_credit" property="customerCredit" jdbcType="INTEGER"/>
        <result column="customer_credit_days" property="customerCreditDays" jdbcType="INTEGER"/>
        <result column="customer_credit_money" property="customerCreditMoney" jdbcType="DECIMAL"/>
        <result column="customer_credit_money_oneday" property="customerCreditMoneyOneday" jdbcType="DECIMAL"/>
        <result column="customer_sign" property="customerSign" jdbcType="INTEGER"/>
        <result column="customer_ispay" property="customerIspay" jdbcType="INTEGER"/>
        <result column="customer_pay_pwd" property="customerPayPwd" jdbcType="VARCHAR"/>
        <result column="customer_pay_pwd_strength" property="customerPayPwdStrength" jdbcType="INTEGER"/>
        <result column="customer_login_errtimes" property="customerLoginErrtimes" jdbcType="INTEGER"/>
        <result column="customer_pay_errtimes" property="customerPayErrtimes" jdbcType="INTEGER"/>
        <result column="customer_references" property="customerReferences" jdbcType="VARCHAR"/>
        <result column="customer_references_id" property="customerReferencesId" jdbcType="BIGINT"/>
        <result column="customer_spread_source" property="customerSpreadSource" jdbcType="VARCHAR"/>
        <result column="customer_spread_source_key" property="customerSpreadSourceKey" jdbcType="VARCHAR"/>
        <result column="customer_activity" property="customerActivity" jdbcType="INTEGER"/>
        <result column="customer_client" property="customerClient" jdbcType="INTEGER"/>
        <result column="customer_addtime" property="customerAddtime" jdbcType="TIMESTAMP"/>
        <result column="customer_job_status" property="customerJobStatus" jdbcType="INTEGER"/>
        <result column="customer_login_area" property="customerLoginArea" jdbcType="VARCHAR"/>
        <result column="customer_login_ip" property="customerLoginIp" jdbcType="VARCHAR"/>
        <result column="customer_login_time_last" property="customerLoginTimeLast" jdbcType="TIMESTAMP"/>
        <result column="customer_login_time_now" property="customerLoginTimeNow" jdbcType="TIMESTAMP"/>
        <result column="customer_addtype" property="customerAddtype" jdbcType="INTEGER"/>
        <result column="customer_social_number" property="customerSocialNumber" jdbcType="VARCHAR"/>
        <result column="customer_promote" property="customerPromote" jdbcType="VARCHAR"/>
        <result column="customer_trueName_isAuthentication" property="customerTruenameIsauthentication"
                jdbcType="INTEGER"/>
        <result column="customer_phone_isAuthentication" property="customerPhoneIsauthentication" jdbcType="INTEGER"/>
        <result column="customer_img" property="customerImg" jdbcType="VARCHAR"/>
        <result column="customer_place_level" property="customerPlaceLevel" jdbcType="VARCHAR"/>
        <result column="customer_birthday_month" property="customerBirthdayMonth" jdbcType="VARCHAR"/>
        <result column="customer_registry" property="customerRegistry" jdbcType="VARCHAR"/>
        <result column="customer_birth_state" property="customerBirthState" jdbcType="VARCHAR"/>
        <result column="customer_marriage" property="customerMarriage" jdbcType="VARCHAR"/>
        <result column="customer_political" property="customerPolitical" jdbcType="VARCHAR"/>
        <result column="customer_school" property="customerSchool" jdbcType="VARCHAR"/>
        <result column="customer_degree" property="customerDegree" jdbcType="VARCHAR"/>
        <result column="customer_major" property="customerMajor" jdbcType="VARCHAR"/>
        <result column="customer_graduate_date" property="customerGraduateDate" jdbcType="DATE"/>
        <result column="customer_first_job_date" property="customerFirstJobDate" jdbcType="DATE"/>
        <result column="customer_agreement_startdate" property="customerAgreementStartdate" jdbcType="DATE"/>
        <result column="customer_agreement_enddate" property="customerAgreementEnddate" jdbcType="DATE"/>
        <result column="customer_agreement_type" property="customerAgreementType" jdbcType="VARCHAR"/>
        <result column="customer_probation" property="customerProbation" jdbcType="VARCHAR"/>
        <result column="customer_registry_address" property="customerRegistryAddress" jdbcType="VARCHAR"/>
        <result column="customer_excel_id" property="customerExcelId" jdbcType="BIGINT"/>
        <result column="customer_english_name" property="customerEnglishName" jdbcType="VARCHAR"/>
        <result column="customer_age" property="customerAge" jdbcType="INTEGER"/>
        <result column="customer_is_complement" property="customerIsComplement" jdbcType="INTEGER"/>
        <result column="customer_current_expense" property="customerCurrentExpense" jdbcType="DECIMAL"/>
        <result column="customer_current_salary" property="customerCurrentSalary" jdbcType="DECIMAL"/>
        <result column="customer_probation_salary" property="customerProbationSalary" jdbcType="DECIMAL"/>
        <result column="customer_regular_salary" property="customerRegularSalary" jdbcType="DECIMAL"/>
        <result column="customer_regular_time" property="customerRegularTime" jdbcType="TIMESTAMP"/>
        <result column="customer_is_redirect" property="customerIsRedirect" jdbcType="INTEGER"/>
        <result column="customer_social_approve_state" property="customerSocialApproveState" jdbcType="INTEGER"/>
        <result column="customer_social_fail_reason" property="customerSocialFailReason" jdbcType="VARCHAR"/>
        <result column="customer_sendmsg_time" property="customerSendmsgTime" jdbcType="DATE"/>
    </resultMap>

    <!--员工详情 -->
    <resultMap id="CustomerDetailResultMap" type="com.xtr.api.dto.customer.CustomersDto">
        <id column="customer_id" property="customerId" jdbcType="BIGINT"/>
        <result column="customer_company_id" property="customerCompanyId" jdbcType="BIGINT"/>
        <result column="customer_company_name" property="customerCompanyName" jdbcType="VARCHAR"/>
        <result column="customer_dep_parentid" property="customerDepParentid" jdbcType="BIGINT"/>
        <result column="customer_dep_parentname" property="customerDepParentname" jdbcType="VARCHAR"/>
        <result column="customer_dep_id" property="customerDepId" jdbcType="BIGINT"/>
        <result column="customer_dep_name" property="customerDepName" jdbcType="VARCHAR"/>
        <result column="customer_number" property="customerNumber" jdbcType="VARCHAR"/>
        <result column="customer_logname" property="customerLogname" jdbcType="VARCHAR"/>
        <result column="customer_password" property="customerPassword" jdbcType="VARCHAR"/>
        <result column="customer_password_strength" property="customerPasswordStrength" jdbcType="INTEGER"/>
        <result column="customer_turename" property="customerTurename" jdbcType="VARCHAR"/>
        <result column="customer_join_time" property="customerJoinTime" jdbcType="TIMESTAMP"/>
        <result column="customer_salary" property="customerSalary" jdbcType="DECIMAL"/>
        <result column="customer_place" property="customerPlace" jdbcType="VARCHAR"/>
        <result column="customer_worktype" property="customerWorktype" jdbcType="VARCHAR"/>
        <result column="customer_sex" property="customerSex" jdbcType="INTEGER"/>
        <result column="customer_birthday" property="customerBirthday" jdbcType="DATE"/>
        <result column="customer_idcard" property="customerIdcard" jdbcType="VARCHAR"/>
        <result column="customer_idcard_img_front" property="customerIdcardImgFront" jdbcType="VARCHAR"/>
        <result column="customer_idcard_img_back" property="customerIdcardImgBack" jdbcType="VARCHAR"/>
        <result column="customer_phone" property="customerPhone" jdbcType="VARCHAR"/>
        <result column="customer_email" property="customerEmail" jdbcType="VARCHAR"/>
        <result column="customer_qq" property="customerQq" jdbcType="VARCHAR"/>
        <result column="customer_bank" property="customerBank" jdbcType="VARCHAR"/>
        <result column="customer_bankarea" property="customerBankarea" jdbcType="VARCHAR"/>
        <result column="customer_banknumber" property="customerBanknumber" jdbcType="VARCHAR"/>
        <result column="customer_contacts" property="customerContacts" jdbcType="VARCHAR"/>
        <result column="customer_edu" property="customerEdu" jdbcType="VARCHAR"/>
        <result column="customer_address" property="customerAddress" jdbcType="VARCHAR"/>
        <result column="customer_credit" property="customerCredit" jdbcType="INTEGER"/>
        <result column="customer_credit_days" property="customerCreditDays" jdbcType="INTEGER"/>
        <result column="customer_credit_money" property="customerCreditMoney" jdbcType="DECIMAL"/>
        <result column="customer_credit_money_oneday" property="customerCreditMoneyOneday" jdbcType="DECIMAL"/>
        <result column="customer_sign" property="customerSign" jdbcType="INTEGER"/>
        <result column="customer_ispay" property="customerIspay" jdbcType="INTEGER"/>
        <result column="customer_pay_pwd" property="customerPayPwd" jdbcType="VARCHAR"/>
        <result column="customer_pay_pwd_strength" property="customerPayPwdStrength" jdbcType="INTEGER"/>
        <result column="customer_login_errtimes" property="customerLoginErrtimes" jdbcType="INTEGER"/>
        <result column="customer_pay_errtimes" property="customerPayErrtimes" jdbcType="INTEGER"/>
        <result column="customer_references" property="customerReferences" jdbcType="VARCHAR"/>
        <result column="customer_references_id" property="customerReferencesId" jdbcType="BIGINT"/>
        <result column="customer_spread_source" property="customerSpreadSource" jdbcType="VARCHAR"/>
        <result column="customer_spread_source_key" property="customerSpreadSourceKey" jdbcType="VARCHAR"/>
        <result column="customer_activity" property="customerActivity" jdbcType="INTEGER"/>
        <result column="customer_client" property="customerClient" jdbcType="INTEGER"/>
        <result column="customer_addtime" property="customerAddtime" jdbcType="TIMESTAMP"/>
        <result column="customer_job_status" property="customerJobStatus" jdbcType="INTEGER"/>
        <result column="customer_login_area" property="customerLoginArea" jdbcType="VARCHAR"/>
        <result column="customer_login_ip" property="customerLoginIp" jdbcType="VARCHAR"/>
        <result column="customer_login_time_last" property="customerLoginTimeLast" jdbcType="TIMESTAMP"/>
        <result column="customer_login_time_now" property="customerLoginTimeNow" jdbcType="TIMESTAMP"/>
        <result column="customer_addtype" property="customerAddtype" jdbcType="INTEGER"/>
        <result column="customer_social_number" property="customerSocialNumber" jdbcType="VARCHAR"/>
        <result column="customer_promote" property="customerPromote" jdbcType="VARCHAR"/>
        <result column="customer_trueName_isAuthentication" property="customerTruenameIsauthentication"
                jdbcType="INTEGER"/>
        <result column="customer_phone_isAuthentication" property="customerPhoneIsauthentication" jdbcType="INTEGER"/>
        <result column="customer_img" property="customerImg" jdbcType="VARCHAR"/>
        <result column="customer_place_level" property="customerPlaceLevel" jdbcType="VARCHAR"/>
        <result column="customer_birthday_month" property="customerBirthdayMonth" jdbcType="VARCHAR"/>
        <result column="customer_registry" property="customerRegistry" jdbcType="VARCHAR"/>
        <result column="customer_birth_state" property="customerBirthState" jdbcType="VARCHAR"/>
        <result column="customer_marriage" property="customerMarriage" jdbcType="VARCHAR"/>
        <result column="customer_political" property="customerPolitical" jdbcType="VARCHAR"/>
        <result column="customer_school" property="customerSchool" jdbcType="VARCHAR"/>
        <result column="customer_degree" property="customerDegree" jdbcType="VARCHAR"/>
        <result column="customer_major" property="customerMajor" jdbcType="VARCHAR"/>
        <result column="customer_graduate_date" property="customerGraduateDate" jdbcType="DATE"/>
        <result column="customer_first_job_date" property="customerFirstJobDate" jdbcType="DATE"/>
        <result column="customer_agreement_startdate" property="customerAgreementStartdate" jdbcType="DATE"/>
        <result column="customer_agreement_enddate" property="customerAgreementEnddate" jdbcType="DATE"/>
        <result column="customer_agreement_type" property="customerAgreementType" jdbcType="VARCHAR"/>
        <result column="customer_probation" property="customerProbation" jdbcType="VARCHAR"/>
        <result column="customer_registry_address" property="customerRegistryAddress" jdbcType="VARCHAR"/>
        <result column="customer_excel_id" property="customerExcelId" jdbcType="BIGINT"/>
        <result column="total_amount" property="totalAmount" jdbcType="DECIMAL"/>
        <result column="customer_english_name" property="customerEnglishName" jdbcType="VARCHAR"/>
        <result column="customer_age" property="customerAge" jdbcType="INTEGER"/>
        <result column="customer_is_complement" property="customerIsComplement" jdbcType="INTEGER"/>
        <result column="customer_is_expense" property="customerIsExpense" jdbcType="INTEGER"/>
        <result column="customer_current_salary" property="customerCurrentSalary" jdbcType="DECIMAL"/>
        <result column="customer_probation_salary" property="customerProbationSalary" jdbcType="DECIMAL"/>
        <result column="customer_regular_salary" property="customerRegularSalary" jdbcType="DECIMAL"/>
        <result column="customer_regular_time" property="customerRegularTime" jdbcType="TIMESTAMP"/>
        <result column="customer_current_expense" property="customerCurrentExpense" jdbcType="DECIMAL"/>
        <result column="customer_is_redirect" property="customerIsRedirect" jdbcType="INTEGER"/>
        <result column="customer_social_approve_state" property="customerSocialApproveState" jdbcType="INTEGER"/>
        <result column="customer_social_fail_reason" property="customerSocialFailReason" jdbcType="VARCHAR"/>

        <result column="month" property="month"  jdbcType="VARCHAR"/>
        <result column="peopleCount" property="peopleCount"  jdbcType="BIGINT"/>
        <result column="year"  property="year"  jdbcType="VARCHAR"/>
        <result column="customer_sendmsg_time" property="customerSendmsgTime" jdbcType="DATE"/>
    </resultMap>
    <!--员工管理页面根据过滤条件查询 -->
    <resultMap id="CustomerConditionResultMap" type="com.xtr.api.dto.customer.CustomersDto" extends="BaseResultMap">
        <result column="personal_id" property="personalId" jdbcType="BIGINT"/>
        <result column="personal_customer_id" property="personalCustomerId" jdbcType="BIGINT"/>
        <result column="personal_relationer_name" property="personalRelationerName" jdbcType="VARCHAR"/>
        <result column="personal_relationer_phone" property="personalRelationerPhone" jdbcType="VARCHAR"/>
        <result column="personal_domicile_place" property="personalDomicilePlace" jdbcType="VARCHAR"/>
        <result column="personal_nation" property="personalNation" jdbcType="VARCHAR"/>
        <result column="personal_politics_status" property="personalPoliticsStatus" jdbcType="VARCHAR"/>
        <result column="personal_current_place" property="personalCurrentPlace" jdbcType="VARCHAR"/>
        <result column="personal_education_high" property="personalEducationHigh" jdbcType="INTEGER"/>
        <result column="personal_graduate_school" property="personalGraduateSchool" jdbcType="VARCHAR"/>
        <result column="personal_major" property="personalMajor" jdbcType="VARCHAR"/>
        <result column="personal_resume" property="personalResume" jdbcType="VARCHAR"/>
        <result column="personal_create_time" property="personalCreateTime" jdbcType="TIMESTAMP"/>
        <result column="personal_update_time" property="personalUpdateTime" jdbcType="TIMESTAMP"/>
        <result column="station_id" property="stationId" jdbcType="BIGINT"/>
        <result column="station_customer_id" property="stationCustomerId" jdbcType="BIGINT"/>
        <result column="station_enter_time" property="stationEnterTime" jdbcType="TIMESTAMP"/>
        <result column="station_employ_method" property="stationEmployMethod" jdbcType="INTEGER"/>
        <result column="station_regular_time" property="stationRegularTime" jdbcType="TIMESTAMP"/>
        <result column="station_customer_number" property="stationCustomerNumber" jdbcType="VARCHAR"/>
        <result column="station_customer_state" property="stationCustomerState" jdbcType="INTEGER"/>
        <result column="station_dept_id" property="stationDeptId" jdbcType="BIGINT"/>
        <result column="station_station_name" property="stationStationName" jdbcType="VARCHAR"/>
        <result column="station_contract_file" property="stationContractFile" jdbcType="VARCHAR"/>
        <result column="station_regular_evaluate" property="stationRegularEvaluate" jdbcType="VARCHAR"/>
        <result column="station_create_time" property="stationCreateTime" jdbcType="TIMESTAMP"/>
        <result column="station_update_time" property="stationUpdateTime" jdbcType="TIMESTAMP"/>
        <result column="station_dimissing_time" property="stationDimissingTime" jdbcType="TIMESTAMP"/>
        <result column="dep_id" property="depId" jdbcType="BIGINT"/>
        <result column="dep_company_id" property="depCompanyId" jdbcType="BIGINT"/>
        <result column="dep_parent_id" property="depParentId" jdbcType="BIGINT"/>
        <result column="dep_name" property="depName" jdbcType="VARCHAR"/>
        <result column="dep_number" property="depNumber" jdbcType="VARCHAR"/>
        <result column="dep_type" property="depType" jdbcType="INTEGER"/>
        <result column="dep_salary_day" property="depSalaryDay" jdbcType="INTEGER"/>
        <result column="dep_sign" property="depSign" jdbcType="INTEGER"/>
        <result column="dep_salary_sumdays" property="depSalarySumdays" jdbcType="INTEGER"/>
        <result column="dep_updateuser_date" property="depUpdateuserDate" jdbcType="INTEGER"/>
        <result column="dep_edit_member" property="depEditMember" jdbcType="BIGINT"/>
        <result column="dep_edit_time" property="depEditTime" jdbcType="TIMESTAMP"/>
        <result column="company_id" property="companyId" jdbcType="BIGINT"/>
        <result column="dep_level" property="depLevel" jdbcType="INTEGER"/>
        <result column="new_salary" property="newSalary" jdbcType="DECIMAL"/>
    </resultMap>
    <sql id="Base_Column_List">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        customer_id, customer_company_id, customer_company_name, customer_dep_parentid, customer_dep_parentname,
        customer_dep_id, customer_dep_name, customer_number, customer_logname, customer_password,
        customer_password_strength, customer_turename, customer_join_time, customer_salary,
        customer_place, customer_worktype, customer_sex, customer_birthday, customer_idcard,
        customer_idcard_img_front, customer_idcard_img_back, customer_phone, customer_email,
        customer_qq, customer_bank, customer_bankarea, customer_banknumber, customer_contacts,
        customer_edu, customer_address, customer_credit, customer_credit_days, customer_credit_money,
        customer_credit_money_oneday, customer_sign, customer_ispay, customer_pay_pwd, customer_pay_pwd_strength,
        customer_login_errtimes, customer_pay_errtimes, customer_references, customer_references_id,
        customer_spread_source, customer_spread_source_key, customer_activity, customer_client,
        customer_addtime, customer_job_status, customer_login_area, customer_login_ip, customer_login_time_last,
        customer_login_time_now, customer_addtype, customer_social_number, customer_promote,
        customer_trueName_isAuthentication, customer_phone_isAuthentication, customer_img,
        customer_place_level, customer_birthday_month, customer_registry, customer_birth_state,
        customer_marriage, customer_political, customer_school, customer_degree, customer_major,
        customer_graduate_date, customer_first_job_date, customer_agreement_startdate, customer_agreement_enddate,
        customer_agreement_type, customer_probation, customer_registry_address,
        customer_excel_id,customer_english_name,customer_age,customer_is_complement,
        customer_is_expense,
        customer_current_expense,
        customer_current_salary,customer_probation_salary,customer_regular_salary,
        customer_regular_time,customer_is_redirect,
        customer_social_approve_state,customer_social_fail_reason
    </sql>

    <sql id="Query_Column_List">
        customer_id, customer_company_id, companys.company_name as customer_company_name, customer_dep_parentid, customer_dep_parentname,
        customer_dep_id, customer_dep_name, customer_number, customer_logname, customer_password,
        customer_password_strength, customer_turename, customer_join_time, customer_salary,
        customer_place, customer_worktype, customer_sex, customer_birthday, customer_idcard,
        customer_idcard_img_front, customer_idcard_img_back, customer_phone, customer_email,
        customer_qq, customer_bank, customer_bankarea, customer_banknumber, customer_contacts,
        customer_edu, customer_address, customer_credit, customer_credit_days, customer_credit_money,
        customer_credit_money_oneday, customer_sign, customer_ispay, customer_pay_pwd, customer_pay_pwd_strength,
        customer_login_errtimes, customer_pay_errtimes, customer_references, customer_references_id,
        customer_spread_source, customer_spread_source_key, customer_activity, customer_client,
        customer_addtime, customer_job_status, customer_login_area, customer_login_ip, customer_login_time_last,
        customer_login_time_now, customer_addtype, customer_social_number, customer_promote,
        customer_trueName_isAuthentication, customer_phone_isAuthentication, customer_img,
        customer_place_level, customer_birthday_month, customer_registry, customer_birth_state,
        customer_marriage, customer_political, customer_school, customer_degree, customer_major,
        customer_graduate_date, customer_first_job_date, customer_agreement_startdate, customer_agreement_enddate,
        customer_agreement_type, customer_probation, customer_registry_address,
        customer_excel_id,customer_english_name,customer_age,customer_is_complement,
        customer_is_expense,
        customer_current_expense,
        customer_current_salary,customer_probation_salary,customer_regular_salary, customer_regular_time,customer_is_redirect,
        customer_social_approve_state,customer_social_fail_reason
    </sql>

    <sql id="Condition_Column_List">
        customer_id,customer_company_id, customer_company_name, customer_dep_parentid, customer_dep_parentname,
        customer_dep_id, customer_dep_name, customer_number, customer_logname, customer_password,
        customer_password_strength, customer_turename, customer_join_time, customer_salary,
        customer_place, customer_worktype, customer_sex, customer_birthday, customer_idcard,
        customer_idcard_img_front, customer_idcard_img_back, customer_phone, customer_email,
        customer_qq, customer_bank, customer_bankarea, customer_banknumber, customer_contacts,
        customer_edu, customer_address, customer_credit, customer_credit_days, customer_credit_money,
        customer_credit_money_oneday, customer_sign, customer_ispay, customer_pay_pwd, customer_pay_pwd_strength,
        customer_login_errtimes, customer_pay_errtimes, customer_references, customer_references_id,
        customer_spread_source, customer_spread_source_key, customer_activity, customer_client,
        customer_addtime, customer_job_status, customer_login_area, customer_login_ip, customer_login_time_last,
        customer_login_time_now, customer_addtype, customer_social_number, customer_promote,
        customer_trueName_isAuthentication, customer_phone_isAuthentication, customer_img,
        customer_place_level, customer_birthday_month, customer_registry, customer_birth_state,
        customer_marriage, customer_political, customer_school, customer_degree, customer_major,
        customer_graduate_date, customer_first_job_date, customer_agreement_startdate, customer_agreement_enddate,
        customer_agreement_type, customer_probation, customer_registry_address, customer_excel_id,customer_english_name,
        customer_age,customer_is_complement,customer_is_redirect,
        customer_current_salary,customer_probation_salary,customer_regular_salary, customer_regular_time,customer_social_approve_state,customer_social_fail_reason,
        personal_id, personal_customer_id, personal_relationer_name, personal_relationer_phone,
        personal_domicile_place, personal_nation, personal_politics_status, personal_current_place,
        personal_education_high, personal_graduate_school, personal_major, personal_resume,
        personal_create_time, personal_update_time,
        station_id, station_customer_id, station_enter_time, station_employ_method, station_regular_time,
        station_customer_number, station_customer_state, station_dept_id, station_station_name,
        station_contract_file, station_regular_evaluate, station_create_time, station_update_time,station_dimissing_time,
        dep_id, dep_company_id, dep_parent_id, dep_name, dep_number, dep_type, dep_salary_day,
        dep_sign, dep_salary_sumdays, dep_updateuser_date, dep_edit_member, dep_edit_time,
        company_id, dep_level
    </sql>

    <sql id="Condition_Column_List_Other">
        customer_id,customer_company_id, customer_company_name, customer_dep_parentid, customer_dep_parentname,
        customer_dep_id, customer_dep_name, customer_number, customer_logname, customer_password,
        customer_password_strength, customer_turename, customer_join_time, customer_salary,
        customer_place, customer_worktype, customer_sex, customer_birthday, customer_idcard,
        customer_idcard_img_front, customer_idcard_img_back, customer_phone, customer_email,
        customer_qq, customer_bank, customer_bankarea, customer_banknumber, customer_contacts,
        customer_edu, customer_address, customer_credit, customer_credit_days, customer_credit_money,
        customer_credit_money_oneday, customer_sign, customer_ispay, customer_pay_pwd, customer_pay_pwd_strength,
        customer_login_errtimes, customer_pay_errtimes, customer_references, customer_references_id,
        customer_spread_source, customer_spread_source_key, customer_activity, customer_client,
        customer_addtime, customer_job_status, customer_login_area, customer_login_ip, customer_login_time_last,
        customer_login_time_now, customer_addtype, customer_social_number, customer_promote,
        customer_trueName_isAuthentication, customer_phone_isAuthentication, customer_img,
        customer_place_level, customer_birthday_month, customer_registry, customer_birth_state,
        customer_marriage, customer_political, customer_school, customer_degree, customer_major,
        customer_graduate_date, customer_first_job_date, customer_agreement_startdate, customer_agreement_enddate,
        customer_agreement_type, customer_probation, customer_registry_address, customer_excel_id,customer_english_name,
        customer_age,customer_is_complement,customer_is_redirect,
        customer_current_salary,customer_probation_salary,customer_regular_salary, customer_regular_time,customer_social_approve_state,customer_social_fail_reason,
         station_enter_time,station_customer_state,customer_sendmsg_time
    </sql>

    <sql id="Index_Info_Column_List">
        customer_id,customer_company_id,customer_turename,customer_phone,customer_probation_salary,customer_regular_salary,
        customers_station.station_enter_time,customers_station.station_regular_time,station_dimissing_time,station_dept_id,
        company_deps.dep_id ,company_deps.dep_name,customer_sendmsg_time
    </sql>

    <sql id="InComplete_Info_Column_List">
        customer_id,customer_company_id,customer_turename,customer_phone,customer_bank,customer_banknumber,customer_idcard,customer_idcard_img_front,customer_idcard_img_back,
        company_deps.dep_id ,company_deps.dep_name,customer_sendmsg_time
    </sql>

    <!-- 查询条件 -->
    <sql id="Example_Where_Clause">
        <if test="customerId != null and customerId != ''">
            AND customer_id = #{customerId,jdbcType=BIGINT}
        </if>
        <if test="customerCompanyId != null  and customerCompanyId != ''">
            AND customer_company_id = #{customerCompanyId,jdbcType=BIGINT}
        </if>
        <if test="customerCompanyName != null">
            AND customer_company_name = #{customerCompanyName,jdbcType=VARCHAR}
        </if>
        <if test="customerDepParentid != null">
            AND customer_dep_parentid = #{customerDepParentid,jdbcType=BIGINT}
        </if>
        <if test="customerDepParentname != null">
            AND customer_dep_parentname = #{customerDepParentname,jdbcType=VARCHAR}
        </if>
        <if test="customerDepId != null">
            AND customer_dep_id = #{customerDepId,jdbcType=BIGINT}
        </if>
        <if test="customerDepName != null">
            AND customer_dep_name = #{customerDepName,jdbcType=VARCHAR}
        </if>
        <if test="customerNumber != null">
            AND customer_number = #{customerNumber,jdbcType=VARCHAR}
        </if>
        <if test="customerLogname != null">
            AND customer_logname = #{customerLogname,jdbcType=VARCHAR}
        </if>
        <if test="customerPassword != null">
            AND customer_password = #{customerPassword,jdbcType=VARCHAR}
        </if>
        <if test="customerPasswordStrength != null">
            AND customer_password_strength = #{customerPasswordStrength,jdbcType=INTEGER}
        </if>
        <if test="customerTurename != null">
            AND customer_turename = #{customerTurename,jdbcType=VARCHAR}
        </if>
        <if test="customerJoinTime != null">
            AND customer_join_time = #{customerJoinTime,jdbcType=TIMESTAMP}
        </if>
        <if test="customerSalary != null">
            AND customer_salary = #{customerSalary,jdbcType=DECIMAL}
        </if>
        <if test="customerPlace != null">
            AND customer_place = #{customerPlace,jdbcType=VARCHAR}
        </if>
        <if test="customerWorktype != null">
            AND customer_worktype = #{customerWorktype,jdbcType=VARCHAR}
        </if>
        <if test="customerSex != null">
            AND customer_sex = #{customerSex,jdbcType=INTEGER}
        </if>
        <if test="customerBirthday != null">
            AND customer_birthday = #{customerBirthday,jdbcType=DATE}
        </if>
        <if test="customerIdcard != null">
            AND customer_idcard = #{customerIdcard,jdbcType=VARCHAR}
        </if>
        <if test="customerIdcardImgFront != null">
            AND customer_idcard_img_front = #{customerIdcardImgFront,jdbcType=VARCHAR}
        </if>
        <if test="customerIdcardImgBack != null">
            AND customer_idcard_img_back = #{customerIdcardImgBack,jdbcType=VARCHAR}
        </if>
        <if test="customerPhone != null">
            AND customer_phone = #{customerPhone,jdbcType=VARCHAR}
        </if>
        <if test="customerEmail != null">
            AND customer_email = #{customerEmail,jdbcType=VARCHAR}
        </if>
        <if test="customerQq != null">
            AND customer_qq = #{customerQq,jdbcType=VARCHAR}
        </if>
        <if test="customerBank != null">
            AND customer_bank = #{customerBank,jdbcType=VARCHAR}
        </if>
        <if test="customerBankarea != null">
            AND customer_bankarea = #{customerBankarea,jdbcType=VARCHAR}
        </if>
        <if test="customerBanknumber != null">
            AND customer_banknumber = #{customerBanknumber,jdbcType=VARCHAR}
        </if>
        <if test="customerContacts != null">
            AND customer_contacts = #{customerContacts,jdbcType=VARCHAR}
        </if>
        <if test="customerEdu != null">
            AND customer_edu = #{customerEdu,jdbcType=VARCHAR}
        </if>
        <if test="customerAddress != null">
            AND customer_address = #{customerAddress,jdbcType=VARCHAR}
        </if>
        <if test="customerCredit != null">
            AND customer_credit = #{customerCredit,jdbcType=INTEGER}
        </if>
        <if test="customerCreditDays != null">
            AND customer_credit_days = #{customerCreditDays,jdbcType=INTEGER}
        </if>
        <if test="customerCreditMoney != null">
            AND customer_credit_money = #{customerCreditMoney,jdbcType=DECIMAL}
        </if>
        <if test="customerCreditMoneyOneday != null">
            AND customer_credit_money_oneday = #{customerCreditMoneyOneday,jdbcType=DECIMAL}
        </if>
        <if test="customerSign != null">
            AND customer_sign = #{customerSign,jdbcType=INTEGER}
        </if>
        <if test="customerIspay != null">
            AND customer_ispay = #{customerIspay,jdbcType=INTEGER}
        </if>
        <if test="customerPayPwd != null">
            AND customer_pay_pwd = #{customerPayPwd,jdbcType=VARCHAR}
        </if>
        <if test="customerPayPwdStrength != null">
            AND customer_pay_pwd_strength = #{customerPayPwdStrength,jdbcType=INTEGER}
        </if>
        <if test="customerLoginErrtimes != null">
            AND customer_login_errtimes = #{customerLoginErrtimes,jdbcType=INTEGER}
        </if>
        <if test="customerPayErrtimes != null">
            AND customer_pay_errtimes = #{customerPayErrtimes,jdbcType=INTEGER}
        </if>
        <if test="customerReferences != null">
            AND customer_references = #{customerReferences,jdbcType=VARCHAR}
        </if>
        <if test="customerReferencesId != null">
            AND customer_references_id = #{customerReferencesId,jdbcType=BIGINT}
        </if>
        <if test="customerSpreadSource != null">
            AND customer_spread_source = #{customerSpreadSource,jdbcType=VARCHAR}
        </if>
        <if test="customerSpreadSourceKey != null">
            AND customer_spread_source_key = #{customerSpreadSourceKey,jdbcType=VARCHAR}
        </if>
        <if test="customerActivity != null">
            AND customer_activity = #{customerActivity,jdbcType=INTEGER}
        </if>
        <if test="customerClient != null">
            AND customer_client = #{customerClient,jdbcType=INTEGER}
        </if>
        <if test="customerAddtime != null">
            AND customer_addtime = #{customerAddtime,jdbcType=TIMESTAMP}
        </if>
        <if test="customerJobStatus != null">
            AND customer_job_status = #{customerJobStatus,jdbcType=INTEGER}
        </if>
        <if test="customerLoginArea != null">
            AND customer_login_area = #{customerLoginArea,jdbcType=VARCHAR}
        </if>
        <if test="customerLoginIp != null">
            AND customer_login_ip = #{customerLoginIp,jdbcType=VARCHAR}
        </if>
        <if test="customerLoginTimeLast != null">
            AND customer_login_time_last = #{customerLoginTimeLast,jdbcType=TIMESTAMP}
        </if>
        <if test="customerLoginTimeNow != null">
            AND customer_login_time_now = #{customerLoginTimeNow,jdbcType=TIMESTAMP}
        </if>
        <if test="customerAddtype != null">
            AND customer_addtype = #{customerAddtype,jdbcType=INTEGER}
        </if>
        <if test="customerSocialNumber != null">
            AND customer_social_number = #{customerSocialNumber,jdbcType=VARCHAR}
        </if>
        <if test="customerPromote != null">
            AND customer_promote = #{customerPromote,jdbcType=VARCHAR}
        </if>
        <if test="customerTruenameIsauthentication != null">
            AND customer_trueName_isAuthentication = #{customerTruenameIsauthentication,jdbcType=INTEGER}
        </if>
        <if test="customerPhoneIsauthentication != null">
            AND customer_phone_isAuthentication = #{customerPhoneIsauthentication,jdbcType=INTEGER}
        </if>
        <if test="customerImg != null">
            AND customer_img = #{customerImg,jdbcType=VARCHAR}
        </if>
        <if test="customerPlaceLevel != null">
            AND customer_place_level = #{customerPlaceLevel,jdbcType=VARCHAR}
        </if>
        <if test="customerBirthdayMonth != null">
            AND customer_birthday_month = #{customerBirthdayMonth,jdbcType=VARCHAR}
        </if>
        <if test="customerRegistry != null">
            AND customer_registry = #{customerRegistry,jdbcType=VARCHAR}
        </if>
        <if test="customerBirthState != null">
            AND customer_birth_state = #{customerBirthState,jdbcType=VARCHAR}
        </if>
        <if test="customerMarriage != null">
            AND customer_marriage = #{customerMarriage,jdbcType=VARCHAR}
        </if>
        <if test="customerPolitical != null">
            AND customer_political = #{customerPolitical,jdbcType=VARCHAR}
        </if>
        <if test="customerSchool != null">
            AND customer_school = #{customerSchool,jdbcType=VARCHAR}
        </if>
        <if test="customerDegree != null">
            AND customer_degree = #{customerDegree,jdbcType=VARCHAR}
        </if>
        <if test="customerMajor != null">
            AND customer_major = #{customerMajor,jdbcType=VARCHAR}
        </if>
        <if test="customerGraduateDate != null">
            AND customer_graduate_date = #{customerGraduateDate,jdbcType=DATE}
        </if>
        <if test="customerFirstJobDate != null">
            AND customer_first_job_date = #{customerFirstJobDate,jdbcType=DATE}
        </if>
        <if test="customerAgreementStartdate != null">
            AND customer_agreement_startdate = #{customerAgreementStartdate,jdbcType=DATE}
        </if>
        <if test="customerAgreementEnddate != null">
            AND customer_agreement_enddate = #{customerAgreementEnddate,jdbcType=DATE}
        </if>
        <if test="customerAgreementType != null">
            AND customer_agreement_type = #{customerAgreementType,jdbcType=VARCHAR}
        </if>
        <if test="customerProbation != null">
            AND customer_probation = #{customerProbation,jdbcType=VARCHAR}
        </if>
        <if test="customerRegistryAddress != null">
            AND customer_registry_address = #{customerRegistryAddress,jdbcType=VARCHAR}
        </if>
        <if test="customerExcelId != null">
            AND customer_excel_id = #{customerExcelId,jdbcType=BIGINT}
        </if>


    </sql>

    <sql id="Condition_Where_Clause">
        <if test="stationEmployMethod != null ">
            AND station_employ_method = #{stationEmployMethod,jdbcType=INTEGER}
        </if>
        <if test="stationCustomerState != null ">
            <if test="stationCustomerState == 1 ">
                AND (station_customer_state = 1 OR station_customer_state=2)
            </if>
            <if test="stationCustomerState == 3 ">
                AND station_customer_state = 3
            </if>
        </if>
        <if test="depName != null and depName != ''">
            AND dep_name like concat('%',#{depName,jdbcType=VARCHAR},'%')
        </if>
        <if test="customerSex != null ">
            AND customer_sex = #{customerSex,jdbcType=INTEGER}
        </if>
        <if test="customerTurename != null and customerTurename != ''">
            AND customer_turename like concat('%',#{customerTurename,jdbcType=VARCHAR},'%')
        </if>
        <if test="customerCompanyId != null ">
            AND customer_company_id = #{customerCompanyId,jdbcType=BIGINT}
        </if>
        <if test="stationDeptId != null ">
            AND station_dept_id = #{stationDeptId,jdbcType=BIGINT}
        </if>
        <if test="selState == 1 ">
            AND (station_customer_state =1 or station_customer_state =2) and
            <![CDATA[ station_enter_time <=date('${endTimeStr}') ]]> and station_enter_time>=date('${startTimeStr}')
        </if>
        <if test="selState == 2 ">
            AND station_customer_state =3
            and <![CDATA[ station_dimissing_time <=date('${endTimeStr}') ]]> and
            station_dimissing_time>=date('${startTimeStr}')
        </if>
        <if test="selState == 3 ">
            AND station_customer_state =1
        </if>
        <if test="selState == 4 ">
            AND (customer_is_complement = ${customerIsComplement} or customer_is_complement is null) AND
            station_customer_state!=3
        </if>
        <if test="selState == 5 ">
            AND station_customer_state!=3
        </if>
        <if test="selState == 6 ">
            AND <![CDATA[ station_enter_time <=date('${endTimeStr}') ]]> AND (customer_regular_time IS NULL or (customer_regular_time IS not  NULL and customer_regular_time>=date('${endTimeStr}'))) AND station_customer_state != 3
        </if>
        <!--<if test="selState != null ">

        </if>-->
    </sql>
    <!--AND <![CDATA[ station_dimissing_time<=#{endTime,jdbcType=TIMESTAMP}]]>
    AND station_dimissing_time>=#{startTime,jdbcType=TIMESTAMP}-->
    <!--AND  <![CDATA[ station_enter_time<=#{endTime,jdbcType=DATE}]]>  AND station_enter_time>=#{startTime,jdbcType=DATE}-->
    <!---->
    <!--AND customer_is_complement=#{customerIsComplement}-->
    <!--AND station_customer_state =3 AND station_dimissing_time between #{startTime,jdbcType=TIMESTAMP} AND #{endTime,jdbcType=TIMESTAMP}-->
    <!--(customer_is_complement=#{customerIsComplement,jdbcType=BIGINT} or customer_is_complement is null)-->
    <!--AND (customer_sex is null OR station_dept_id is null OR personal_relationer_name is null)-->
    <!-- 查询员工信息过滤条件 -->
    <sql id="StaffManage_Where_Clause">
        <if test="customerCompanyName != null and customerCompanyName != '' ">
            AND companys.company_name like concat('%',#{customerCompanyName,jdbcType=VARCHAR},'%')
        </if>
        <if test="customerTurename != null and customerTurename != '' ">
            AND (customer_turename like concat('%',#{customerTurename,jdbcType=VARCHAR},'%')
            or customer_phone like concat('%',#{customerTurename,jdbcType=VARCHAR},'%')
            or customer_idcard like concat('%',#{customerTurename,jdbcType=VARCHAR},'%'))
        </if>
        <if test="customerTruenameIsauthentication != null">
            AND customer_trueName_isAuthentication = #{customerTruenameIsauthentication,jdbcType=INTEGER}
        </if>
    </sql>

    <!--员工管理首页列表过滤条件-->
    <sql id="Customers_NewList_Where_Clause">
        <if test="showIndexType != null">
            <if test="showIndexType == 1">
                AND customers_station.station_customer_state!=3 AND customers_station.station_customer_state!=4
            </if>
            <if test="showIndexType == 2">
                AND customers_station.station_customer_state=2
                AND NOT EXISTS (select customer_id from (
                SELECT customers.customer_id FROM customers,customers_record
                WHERE customers.customer_company_id=${customerCompanyId} and customers.customer_id=customers_record.record_customer_id and customers_record.record_operation_type=3
                and customers_record.record_dimissing_time>=date_format(now(),'%Y-%m-%d')) B where customers.customer_id=B.customer_id)
            </if>
            <if test="showIndexType == 3">
                AND customers_station.station_customer_state=1
                AND NOT EXISTS (select customer_id from (
                SELECT customers.customer_id FROM customers,customers_record
                WHERE customers.customer_company_id=${customerCompanyId} and customers.customer_id=customers_record.record_customer_id and customers_record.record_operation_type=3
                and customers_record.record_dimissing_time>=date_format(now(),'%Y-%m-%d')) B where customers.customer_id=B.customer_id)
            </if>
            <if test="showIndexType == 4">
                AND customers_station.station_customer_state!=3 AND customers_station.station_customer_state!=4
            </if>
            <if test="showIndexType == 5">
                AND customers_station.station_customer_state=3
            </if>
        </if>
        <if test="customerTurename != null and customerTurename != ''">
            AND (customers.customer_turename like concat('%',#{customerTurename,jdbcType=VARCHAR},'%')
            or company_deps.dep_name like concat('%',#{customerTurename,jdbcType=VARCHAR},'%'))
        </if>
    </sql>

    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        select
        <include refid="Base_Column_List"/>
        from customers
        where customer_id = #{customerId,jdbcType=BIGINT}
    </select>

    <select id="selectCustomers" resultMap="BaseResultMap" parameterType="com.xtr.api.domain.company.CompanysBean">
        SELECT
        <include refid="Base_Column_List"/>
        FROM customers
        WHERE 1 = 1
        <include refid="Example_Where_Clause"/>
    </select>

    <!-- 根据企业Id获取企业员工信息-->
    <select id="selectPageList" resultMap="BaseResultMap" parameterType="com.xtr.api.domain.company.CompanysBean">
        SELECT
        <include refid="Base_Column_List"/>
        FROM customers
        WHERE 1=1
        <include refid="Example_Where_Clause"/>
        ORDER BY customer_addtime DESC
    </select>

    <!--根据过滤条件获取员工信息 -->
    <select id="selectCustomerInfoPageList" resultMap="CustomerDetailResultMap"
            parameterType="com.xtr.api.domain.customer.CustomersBean">
        SELECT
        <include refid="Query_Column_List"/>,sub_account.amout as total_amount
        FROM customers
        left join sub_account on customers.customer_id = sub_account.cust_id and sub_account.property=1
        left join companys on customers.customer_company_id=companys.company_id
        WHERE 1=1
        <include refid="StaffManage_Where_Clause"/>
        ORDER BY customers.customer_addtime DESC
    </select>

    <!--获取员工详细信息 -->
    <select id="selectCustomerInfoDetail" resultMap="CustomerDetailResultMap" parameterType="java.lang.Long">
        SELECT
        <include refid="Base_Column_List"/>,sub_account.amout as total_amount
        FROM customers
        left join sub_account on customers.customer_id = sub_account.cust_id and sub_account.property=1
        WHERE
        customers.customer_id=#{customerId,jdbcType=BIGINT}
    </select>

    <select id="selectCountByDeptId" resultType="int" parameterType="java.lang.Long">
      SELECT count(customer_id) FROM customers where customer_dep_id = #{deptId,jdbcType=BIGINT}
    </select>

    <!--查询企业员工数量-->
    <select id="selectCompanyCustomerCount" resultType="java.lang.Integer">
        select count(customer_id) from customers where customer_company_id = #{companyId,jdbcType=BIGINT}
    </select>

    <!-- 根据Id获取员工姓名-->
    <select id="selectNameById" resultMap="BaseResultMap" parameterType="java.lang.Long">
        SELECT customer_turename,customer_place,customer_dep_name
        FROM customers
        WHERE customer_id=#{customerId,jdbcType=BIGINT}
    </select>

    <!-- 根据员工的手机号跟姓名查询员工 可用状态-->
    <select id="selectComstomerByPhoneAndTrueName" resultMap="BaseResultMap"
            parameterType="com.xtr.api.domain.customer.CustomersBean">
        select
        <include refid="Base_Column_List"/>
        from
        customers
        WHERE customer_turename=#{customerTurename,jdbcType=VARCHAR} AND customer_phone
        =#{customerPhone,jdbcType=VARCHAR}
        AND customer_sign= 1 AND
        customer_company_id =#{customerCompanyId,jdbcType=BIGINT}

    </select>

    <!-- 根据部门查询员工-->
    <select id="selectByDepId" resultMap="BaseResultMap">
        SELECT
        c.*
        FROM
        customers c
        INNER JOIN customers_station cs ON cs.station_customer_id = c.customer_id
        WHERE
        c.customer_sign = 1
        and
        cs.station_customer_state <![CDATA[ < ]]> 3
        AND
        c.customer_company_id = #{companyId}
        <if test="depId != null">
            AND cs.station_dept_id = #{depId}
        </if>
        <if test="depId == null">
            AND cs.station_dept_id is null
        </if>
    </select>

    <!-- 根据部门查询员工数量-->
    <select id="selectCountByDepId" resultType="java.lang.Integer">
        SELECT
        count(1)
        FROM
        customers c
        INNER JOIN customers_station cs ON cs.station_customer_id = c.customer_id
        WHERE
        c.customer_sign = 1
        and
        cs.station_customer_state <![CDATA[ < ]]> 3
        and c.customer_company_id = #{companyId}
        <if test="depId != null">
            AND cs.station_dept_id = #{depId}
        </if>
        <if test="depId == null">
            AND cs.station_dept_id is null
        </if>
    </select>


    <!--根据过滤条件查询所有企业员工与信息 -->
    <select id="selectCustomersByCondition" resultMap="CustomerConditionResultMap"
            parameterType="com.xtr.api.dto.customer.CustomersDto">
        SELECT
        <include refid="Condition_Column_List"/>
        FROM customers
        left join customers_station on customers.customer_id=customers_station.station_customer_id
        left join customers_personal on customers.customer_id=customers_personal.personal_customer_id
        left join company_deps on customers_station.station_dept_id=company_deps.dep_id
        WHERE station_customer_state!=4
        <include refid="Condition_Where_Clause"/>
    </select>

    <!--根据过滤条件查询所有企业员工与信息 -->
    <select id="selectCustomerNumber"
            parameterType="com.xtr.api.dto.customer.CustomersDto" resultType="integer">
        SELECT count(1)
        FROM customers
        left join customers_station on customers.customer_id=customers_station.station_customer_id
        left join customers_personal on customers.customer_id=customers_personal.personal_customer_id
        left join company_deps on customers_station.station_dept_id=company_deps.dep_id
        WHERE station_customer_state!=4
        <include refid="Condition_Where_Clause"/>
    </select>

    <!--获取未定薪员工id -->
    <select id="selectCustomerList"
            parameterType="com.xtr.api.dto.customer.CustomersDto" resultMap="BaseResultMap">
        SELECT customers.customer_id
        FROM customers
        left join customers_station on customers.customer_id=customers_station.station_customer_id
        left join customers_personal on customers.customer_id=customers_personal.personal_customer_id
        left join company_deps on customers_station.station_dept_id=company_deps.dep_id
        WHERE station_customer_state!=4
        <include refid="Condition_Where_Clause"/>
    </select>
    <!-- 根据主键查询当前账号可用的员工-->
    <select id="selectById" parameterType="java.lang.Long" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        FROM
        customers
        where customer_id=#{customerId,jdbcType=BIGINT} and customer_sign = 1
    </select>

    <!--根据ID查询用户信息-->
    <select id="selectCustomersByCustomerId" resultMap="CustomerConditionResultMap" parameterType="java.lang.Long">
        SELECT
        <include refid="Condition_Column_List"/>
        FROM customers
        left join customers_station on customers.customer_id=customers_station.station_customer_id
        left join customers_personal on customers.customer_id=customers_personal.personal_customer_id
        left join company_deps on customers_station.station_dept_id=company_deps.dep_id
        WHERE customer_id=#{customerId,jdbcType=BIGINT}
    </select>

    <!--查询手机号是否有重复-->
    <select id="selectPhoneForeach" resultMap="CustomerConditionResultMap">
        SELECT
        <include refid="Base_Column_List"/>,customers_station.station_customer_state
        FROM customers
        left join customers_station on customers.customer_id=customers_station.station_customer_id
        <where>
            customer_company_id=#{companyId,jdbcType=BIGINT}
            and customer_phone in
            <foreach collection="list" item="item" index="index" open="(" separator="," close=")">
                #{item}
            </foreach>
        </where>
    </select>

    <!--查询身份证号是否有重复-->
    <select id="selectidCardForeach" resultMap="CustomerConditionResultMap">
        SELECT
        <include refid="Base_Column_List"/>,customers_station.station_customer_state
        FROM customers
        left join customers_station on customers.customer_id=customers_station.station_customer_id
        <where>
            customer_company_id=#{companyId,jdbcType=BIGINT}
            and customer_idcard in
            <foreach collection="list" item="item" index="index" open="(" separator="," close=")">
                #{item}
            </foreach>
        </where>
    </select>


    <!-- 根据公司主键获取员工id-->
    <select id="selectByCompanyId" resultMap="CustomerConditionResultMap" parameterType="java.lang.Long">
        select
        a.customer_id,b.station_dept_id as customer_dep_id,a.customer_company_id,a.customer_current_salary,
        b.station_employ_method,b.station_customer_state,b.station_dimissing_time,a.customer_current_expense,
        c.new_salary
        from
        customers a
        LEFT join customers_station b
        on a.customer_id = b.station_customer_id
        LEFT JOIN
        customer_salary_record
        c ON a.customer_id = c.customer_id
        and c.salary_record_id in(select max(salary_record_id) from customer_salary_record where effective_date <![CDATA[ >= ]]> #{startDate,jdbcType=TIMESTAMP}
        AND effective_date <![CDATA[ <= ]]> #{endDate,jdbcType=TIMESTAMP} group by customer_id)
        WHERE
        a.customer_company_id = #{companyId,jdbcType=BIGINT}
        and ((b.station_dimissing_time is null) or (b.station_dimissing_time is not null and b.station_dimissing_time &gt;= #{startDate,jdbcType=TIMESTAMP}))
        and b.station_enter_time &lt;=#{endDate,jdbcType=TIMESTAMP}
    </select>

    <!-- 根据公司主键获取员工id-->
    <select id="selectByCompanyIdNumber" resultType="integer" parameterType="java.lang.Long">
        select
        count(1)
        from
        customers a
        LEFT join customers_station b
        on a.customer_id = b.station_customer_id
        WHERE
        a.customer_company_id = #{companyId,jdbcType=BIGINT}
        and ((b.station_dimissing_time is null) or (b.station_dimissing_time is not null and b.station_dimissing_time &gt;= #{startDate,jdbcType=TIMESTAMP}))
        and b.station_enter_time &lt;=#{endDate,jdbcType=TIMESTAMP}
    </select>

    <!-- 根据Id查询员工信息-->
    <select id="selectByCustomerId" resultMap="CustomerConditionResultMap" parameterType="java.lang.Long">
        select
        a.customer_id,b.station_dept_id as customer_dep_id,a.customer_company_id,a.customer_current_salary,
        b.station_employ_method,b.station_customer_state,b.station_dimissing_time,a.customer_current_expense,
        c.new_salary
        from
        customers a
        LEFT join customers_station b
        on a.customer_id = b.station_customer_id
        LEFT JOIN
        customer_salary_record
        c ON a.customer_id = c.customer_id
        and c.salary_record_id in(select max(salary_record_id) from customer_salary_record where effective_date <![CDATA[ >= ]]> #{startDate,jdbcType=TIMESTAMP}
        AND effective_date <![CDATA[ <= ]]> #{endDate,jdbcType=TIMESTAMP} group by customer_id)
        WHERE
        a.customer_id = #{customerId,jdbcType=BIGINT}
        and ((b.station_dimissing_time is null) or (b.station_dimissing_time is not null and b.station_dimissing_time &gt;= #{startDate,jdbcType=TIMESTAMP}))
        and b.station_enter_time &lt;=#{endDate,jdbcType=TIMESTAMP}
    </select>

    <!-- 分页查询员工信息-->
    <select id="selectCustomerPageList" resultMap="CustomerConditionResultMap" parameterType="com.xtr.api.dto.salary.CustomerPayrollDto">
        select
        a.customer_id,b.station_dept_id as customer_dep_id,a.customer_company_id,a.customer_current_salary,
        b.station_employ_method,b.station_customer_state,b.station_dimissing_time,a.customer_current_expense,
        c.new_salary
        from
        customers a
        LEFT join customers_station b
        on a.customer_id = b.station_customer_id
        LEFT JOIN
        customer_salary_record
        c ON a.customer_id = c.customer_id
        and c.salary_record_id in(select max(salary_record_id) from customer_salary_record where effective_date <![CDATA[ >= ]]> #{startDate,jdbcType=TIMESTAMP}
        AND effective_date <![CDATA[ <= ]]> #{endDate,jdbcType=TIMESTAMP} group by customer_id)
        WHERE
        a.customer_company_id = ${companyId}
        and ((b.station_dimissing_time is null) or (b.station_dimissing_time is not null and b.station_dimissing_time &gt;= date('${startDate}')))
        and b.station_enter_time &lt;=date('${endDate}')
        <if test="isSalary == 0 ">
            AND a.customer_regular_time is null
        </if>
    </select>

    <!--查询身份证号是否有重复-->
    <select id="selectByPhone" resultMap="BaseResultMap">
        SELECT
        <include refid="Base_Column_List"/>
        FROM customers
        WHERE
        customer_phone = #{phone}
    </select>

    <!-- 根据公司查询所有未离职的员工-->
    <select id="selectUsefulCustomerByCompanyId" resultMap="BaseResultMap">
        select * from customers c
        inner join customers_station cs
        on c.customer_id = cs.station_customer_id
        WHERE
        c.customer_sign = 1
        and
        customer_company_id = #{companyId}
        and
        cs.station_customer_state <![CDATA[ < ]]> 3

    </select>

    <select id="selectComstomerByPhoneAndComId" parameterType="com.xtr.api.domain.customer.CustomersBean"
            resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        FROM customers
        WHERE
        customer_phone = #{customerPhone,jdbcType=VARCHAR} and customer_company_id =
        #{customerCompanyId,jdbcType=BIGINT} and customer_sign=1
    </select>

    <!--获取未定薪员工人数-->
    <select id="selectComstomerCountByNoSaraly" parameterType="com.xtr.api.dto.customer.CustomersDto"
            resultMap="CustomerConditionResultMap">
        select
        <include refid="Condition_Column_List"/>
        FROM customers
        left join customers_station on customers.customer_id=customers_station.station_customer_id
        left join customers_personal on customers.customer_id=customers_personal.personal_customer_id
        left join company_deps on customers_station.station_dept_id=company_deps.dep_id
        WHERE
        customer_company_id = #{customerCompanyId,jdbcType=BIGINT} and customer_regular_time is null and
        station_customer_state!=3 and
        station_customer_state!=4

    </select>
    <!--and (<![CDATA[ customer_regular_time>#{endTime,jdbcType=TIMESTAMP}]]> or customer_regular_time is null)-->
    <!--查询身份证号是否有重复-->
    <select id="selectByPhoneAndCompanyId" resultMap="BaseResultMap">
        SELECT
        <include refid="Base_Column_List"/>
        FROM customers
        inner join customers_station
        on station_customer_id = customer_id
        WHERE
        customer_phone = #{phone}
        and
        customer_company_id = #{companyId}
        and station_customer_state <![CDATA[ <]]> 3
        limit 1
    </select>

    <!--查询身份证号是否有重复-->
    <select id="selectUsefulCustByCompany" resultMap="BaseResultMap">
        SELECT
        <include refid="Base_Column_List"/>
        FROM customers
        inner join customers_station
        on station_customer_id = customer_id
        WHERE
        customer_company_id = #{companyId}
        and station_customer_state <![CDATA[ <]]> 4
    </select>

    <!--根据条件查询主键-->
    <select id="selectPrimaryKey" resultType="java.lang.Long">
        select customer_id from customers a left join customers_station b
        on a.customer_id = b.station_customer_id
        WHERE 1=1
        <if test="companyId != null">
            and a.customer_company_id = #{companyId,jdbcType=BIGINT}
        </if>
        <if test="depts != null">
            and b.station_dept_id in
            <foreach item="item" index="index" collection="depts" open="(" separator="," close=")">
                #{item}
            </foreach>
        </if>
        <if test="members != null">
            and a.customer_id in
            <foreach item="item" index="index" collection="members" open="(" separator="," close=")">
                #{item}
            </foreach>
        </if>
    </select>

    <select id="selectByIds" resultMap="BaseResultMap">
        SELECT
        <include refid="Base_Column_List"/>
        FROM customers where customer_id in
        <foreach item="item" index="index" collection="array" open="(" separator="," close=")">
            #{item}
        </foreach>
    </select>

    <!-- 查询企业下的员工数量-->
    <select id="selectCustomersCount" resultType="java.lang.Long" parameterType="com.xtr.api.dto.customer.CustomersDto">

        SELECT
        count(*)
        from customers a left JOIN customers_station b on a.customer_id = b.station_customer_id
        where a.customer_company_id=#{customerCompanyId}
        <!-- 转正数量-->
        <if test="selState == 2 ">
            AND station_customer_state =2
            AND
            <![CDATA[ station_regular_time <=date('${endTimeStr}') ]]> and station_regular_time>=date('${startTimeStr}')
        </if>
        <!-- 离职人数-->
        <if test="selState == 3 ">
            AND station_customer_state =3
            and <![CDATA[ station_dimissing_time <=date('${endTimeStr}') ]]> and
            station_dimissing_time>=date('${startTimeStr}')
        </if>
        <!-- 入职人数-->
        <if test="selState==1">
            AND   (station_customer_state =1 or station_customer_state=2)
            and <![CDATA[ station_enter_time <=date('${endTimeStr}') ]]> and
            station_enter_time>=date('${startTimeStr}')
        </if>
        <!-- 所有员工-->
        <if test="selState == 5 ">
            AND station_customer_state!=3 AND station_customer_state!=4
        </if>
    </select>

    <!-- 查询所有未生成账户的员工-->
    <select id="selectCustoemrSubAccount" resultMap="BaseResultMap">
      SELECT customer_id
        FROM customers
        WHERE customer_id NOT IN (SELECT cust_id
                                  FROM sub_account
                                  WHERE property = 1)
    </select>
    <!-- 查询所有报销未定额的人 -->
    <select id="selectLiveCountByCompanyId" resultType="java.lang.Integer">
<!--        select count(1) from customers c inner join customers_station cs on cs.station_customer_id = c.customer_id
         inner join customer_payroll pr on pr.customer_id = c.customer_id
         where c.customer_company_id = #{companyId} and cs.station_customer_state &lt; 3 and pr.pay_cycle_id = #{cycleId}
-->
        SELECT
            count(1)
        FROM
            customers cust
        INNER JOIN customers_station cs on cs.station_customer_id = cust.customer_id
        LEFT JOIN customer_payroll pr ON pr.customer_id = cust.customer_id
        WHERE
        pr.pay_cycle_id = ${cycleId}
        AND cust.customer_company_id = ${companyId}
        AND ((cs.station_dimissing_time is null) or (cs.station_dimissing_time is not null and cs.station_dimissing_time &gt;= #{startDate}))
        AND cs.station_customer_state &lt; 4
    </select>

    <!-- 查询最近的一条员工入职信息-->
    <select id="selectLastCustomerByPhone" resultMap="CustomerConditionResultMap">

      select <include refid="Condition_Column_List_Other"/>
        from  customers a left join customers_station b on  a.customer_id = b.station_customer_id
        where a.customer_phone =#{phone} order by
        b.station_enter_time desc
    </select>
    <!-- 查询符合进入入职规范页面的数量-->
    <select id="selectCountForIsRedirect" resultType="java.lang.Integer" parameterType="java.lang.Long">
        SELECT count(1)
        FROM customers
        left join companys on customers.customer_company_id=companys.company_id
        WHERE customers.customer_id=#{customerId,jdbcType=BIGINT} and  companys.company_is_view_require=1 and (customers.customer_is_redirect=1 or customers.customer_is_redirect is null)
    </select>
    <select id="selectUnbindCustomers" parameterType="java.lang.String" resultMap="CustomerConditionResultMap">
        select <include refid="Condition_Column_List_Other"/>
        from  customers a left join customers_station b on a.customer_id=b.station_customer_id
        where  a.customer_phone =#{phone}    order by  b.station_enter_time desc
    </select>

    <!-- 根据公司主键获取未定薪员工人数-->
    <select id="selectNoSaralyCountByCompanyId" resultType="integer">
        select
        count(1)
        from
        customers a
        LEFT join customers_station b
        on a.customer_id = b.station_customer_id
        WHERE
        a.customer_company_id = #{companyId,jdbcType=BIGINT}
        and ((b.station_dimissing_time is null) or (b.station_dimissing_time is not null and b.station_dimissing_time &gt;= #{startDate,jdbcType=TIMESTAMP}))
        and b.station_enter_time &lt;=#{endDate,jdbcType=TIMESTAMP}
        and a.customer_regular_time is null
    </select>

    <select id="selectByIdCard" resultMap="BaseResultMap" parameterType="java.lang.String">
        select <include refid="Base_Column_List"/> from customers where customer_idcard = #{idCard} limit 1
    </select>

    <select id="selectCustomersForeach" resultMap="BaseResultMap">
        SELECT
        <include refid="Base_Column_List"/>
        FROM customers where customer_id in
        <foreach item="item" index="index" collection="list" open="(" separator="," close=")">
            #{item}
        </foreach>
    </select>
    <!--根据员工身份证批量获取员工信息-->
    <select id="selectCustomersForeachByIdcard" resultMap="BaseResultMap">
        SELECT
        <include refid="Base_Column_List"/>
        FROM customers where customer_idcard in
        <foreach item="item" index="index" collection="list" open="(" separator="," close=")">
            #{item}
        </foreach>
    </select>

    <select id="selectShebaoAdditionalCustomer" resultMap="BaseResultMap">
        SELECT
        <include refid="Base_Column_List"/>
        FROM
        customers c
        INNER JOIN customers_station cs ON c.customer_id = cs.station_customer_id
        INNER JOIN company_protocol cp ON c.customer_company_id = cp.protocol_company_id
        WHERE
        cs.station_customer_state &lt; 3
        AND c.customer_social_approve_state = 1
        AND cp.protocol_contract_type = 3
        AND cp.protocol_current_status >= 2
        AND cp.protocol_current_status &lt;= 3

    </select>
    <select id="selectShebaoFailedCount" resultType="java.lang.Integer">
        SELECT
        count(1)
        FROM
        customers c
        INNER JOIN customers_station cs ON c.customer_id = cs.station_customer_id
        WHERE
        cs.station_customer_state &lt; 4
        AND c.customer_social_approve_state = 4
        and c.customer_company_id = #{memberCompanyId}
    </select>

    <!--查询发工资计薪周期内入职员工人数 -->
    <select id="selectEnterNumberForSalary"
            parameterType="com.xtr.api.dto.customer.CustomersDto" resultType="integer">
        SELECT count(1)
        FROM customers
        left join customers_station on customers.customer_id=customers_station.station_customer_id
        left join customers_personal on customers.customer_id=customers_personal.personal_customer_id
        left join company_deps on customers_station.station_dept_id=company_deps.dep_id
        WHERE  customer_company_id = #{customerCompanyId,jdbcType=BIGINT} and <![CDATA[ station_enter_time <=date('${endTimeStr}') ]]> and station_enter_time>=date('${startTimeStr}')
    </select>

    <!--查询发工资计薪周期内离职员工人数 -->
    <select id="selectLeaveNumberForSalary"
            parameterType="com.xtr.api.dto.customer.CustomersDto" resultType="integer">
        SELECT count(1)
        FROM customers
        left join customers_station on customers.customer_id=customers_station.station_customer_id
        left join customers_personal on customers.customer_id=customers_personal.personal_customer_id
        left join company_deps on customers_station.station_dept_id=company_deps.dep_id
        WHERE customer_company_id = #{customerCompanyId,jdbcType=BIGINT} and <![CDATA[ station_dimissing_time <=date('${endTimeStr}') ]]> and station_dimissing_time>=date('${startTimeStr}')
    </select>
    <!-- 查询该公司当前年每个月的在职员工数量集合-->
    <select id="selectEveryMonthCustomerCounts"  resultMap="CustomerDetailResultMap">
      SELECT
	DATE_FORMAT(station_enter_time, '%Y') YEAR,
	DATE_FORMAT(station_enter_time, '%m') MONTH,
	count(*) AS peopleCount
FROM
	customers_station a
  left join customers cu on a.station_customer_id = cu.customer_id
    WHERE
    DATE_FORMAT(station_enter_time, '%Y') = #{year}
    AND (station_customer_state = 1  or station_customer_state=2) and cu.customer_company_id= #{companyId}
    GROUP BY
    YEAR,
    MONTH DESC
    </select>

  <!--WHERE
	DATE_FORMAT(station_enter_time, '%Y') = #{year}
AND (station_customer_state = 1  or station_customer_state=2) and cu.customer_company_id= #{companyId}
GROUP BY
	YEAR,
	MONTH DESC-->
<!--</select>-->
    <!-- 根据相关条件获取企业员工信息并展示在员工管理首页-->
    <select id="selectCustomersByNewCondition" resultMap="CustomerConditionResultMap" parameterType="com.xtr.api.dto.customer.CustomersDto">
        SELECT
        <include refid="Index_Info_Column_List"/>
        FROM customers
        left join customers_station on customers.customer_id=customers_station.station_customer_id
        left join company_deps on customers_station.station_dept_id=company_deps.dep_id
        WHERE customer_company_id=${customerCompanyId}
        <include refid="Customers_NewList_Where_Clause"/>
        <if test="isSortEnterTime == null">
            ORDER BY customers_station.station_enter_time
        </if>
        <if test="isSortEnterTime != null and isSortEnterTime == 1">
            ORDER BY customers_station.station_enter_time
        </if>
        <if test="isSortEnterTime != null and isSortEnterTime == 2">
            ORDER BY customers_station.station_enter_time DESC
        </if>
    </select>


    <!-- 获取待离职的员工-->
    <select id="selectWillLeaveByNewCondtion" resultMap="CustomerConditionResultMap" parameterType="com.xtr.api.dto.customer.CustomersDto">
        SELECT
        customer_id,customer_company_id,customer_turename,customer_phone,customer_probation_salary,customer_regular_salary,station_dept_id,
        customers_station.station_enter_time,customers_station.station_regular_time,customers_record.record_dimissing_time station_dimissing_time,
        company_deps.dep_id ,company_deps.dep_name,customer_sendmsg_time
        FROM customers
        left join customers_station on customers.customer_id=customers_station.station_customer_id
        left join company_deps on customers_station.station_dept_id=company_deps.dep_id
        left join customers_record on customers.customer_id=customers_record.record_customer_id
        WHERE customer_company_id=${customerCompanyId}
        and station_customer_state!=3 and  station_customer_state!=4 and customers_record.record_operation_type=3 and customers_record.record_dimissing_time>=date_format(now(),'%Y-%m-%d')
        <if test="customerTurename != null and customerTurename != ''">
            AND (customers.customer_turename like concat('%',#{customerTurename,jdbcType=VARCHAR},'%')
            or company_deps.dep_name like concat('%',#{customerTurename,jdbcType=VARCHAR},'%'))
        </if>
        group by customers.customer_id
        <if test="isSortEnterTime == null">
            ORDER BY customers_station.station_enter_time
        </if>
        <if test="isSortEnterTime != null and isSortEnterTime == 1">
            ORDER BY customers_station.station_enter_time
        </if>
        <if test="isSortEnterTime != null and isSortEnterTime == 2">
            ORDER BY customers_station.station_enter_time DESC
        </if>
    </select>

    <!-- 根据相关条件获取企业员工数量-->
    <select id="selectCountByNewCondition" resultType="int" parameterType="com.xtr.api.dto.customer.CustomersDto">
        SELECT
        count(1)
        FROM customers
        left join customers_station on customers.customer_id=customers_station.station_customer_id
        left join company_deps on customers_station.station_dept_id=company_deps.dep_id
        WHERE customer_company_id=${customerCompanyId}
        <include refid="Customers_NewList_Where_Clause"/>
    </select>

    <!-- 获取待离职的员工数量-->
    <select id="selectWillLeaveCountByNewCondtion" resultType="int" parameterType="com.xtr.api.dto.customer.CustomersDto">
        select count(1) from (SELECT
        count(1)
        FROM customers
        left join customers_station on customers.customer_id=customers_station.station_customer_id
        left join company_deps on customers_station.station_dept_id=company_deps.dep_id
        left join customers_record on customers.customer_id=customers_record.record_customer_id
        WHERE customer_company_id=${customerCompanyId}
        and station_customer_state!=3 and  station_customer_state!=4 and customers_record.record_operation_type=3 and customers_record.record_dimissing_time>=date_format(now(),'%Y-%m-%d')
        group by customers.customer_id) A
    </select>

    <!-- 根据相关条件获取企业员工信息并展示在员工管理首页-->
    <select id="selectInCompleteListByNewCondition" resultMap="CustomerConditionResultMap" parameterType="com.xtr.api.dto.customer.CustomersDto">
        SELECT
        <include refid="InComplete_Info_Column_List"/>
        FROM customers
        left join customers_station on customers.customer_id=customers_station.station_customer_id
        left join company_deps on customers_station.station_dept_id=company_deps.dep_id
        WHERE customer_company_id=${customerCompanyId} and customers_station.station_customer_state!=3 and customers_station.station_customer_state!=4
        and (customers.customer_banknumber is null or customers.customer_bank is null or customers.customer_idcard is null or customers.customer_idcard_img_front is null or customers.customer_idcard_img_back is null)
        <if test="customerTurename != null and customerTurename != ''">
            AND customers.customer_turename like concat('%',#{customerTurename,jdbcType=VARCHAR},'%')
        </if>
        <if test="depId != null">
            AND company_deps.dep_id = #{depId,jdbcType=BIGINT}
        </if>
        ORDER BY customers.customer_addtime DESC
    </select>

    <!--查询企业下的所有员工-->
    <select id="selectCustomersForCompanyId" resultMap="BaseResultMap">
        SELECT
        <include refid="Base_Column_List"/>
        FROM customers
        left join customers_station on customers.customer_id=customers_station.station_customer_id
        <where>
            customer_company_id=#{companyId,jdbcType=BIGINT} and customers_station.station_customer_state!=4
        </where>
    </select>



    <!--批量获取员工基本工资基数-->
    <select id="selectSalaryBaseBatch" resultMap="CustomerConditionResultMap">
        select customers.customer_id, customers.customer_probation_salary,customers.customer_regular_salary,customers_station.station_regular_time
        from  customers
        left join customers_station on customers.customer_id=customers_station.station_customer_id
        where customers.customer_id in
        <foreach item="item" index="index" collection="list" open="(" separator="," close=")">
            #{item}
        </foreach>
    </select>

</mapper>