<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.xtr.core.persistence.reader.salary.CustomerSalaryRecordReaderMapper">
    <resultMap id="BaseResultMap" type="com.xtr.api.domain.salary.CustomerSalaryRecordBean">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        <id column="salary_record_id" property="salaryRecordId" jdbcType="BIGINT"/>
        <result column="customer_id" property="customerId" jdbcType="BIGINT"/>
        <result column="old_salary" property="oldSalary" jdbcType="DECIMAL"/>
        <result column="new_salary" property="newSalary" jdbcType="DECIMAL"/>
        <result column="effective_date" property="effectiveDate" jdbcType="DATE"/>
        <result column="reason" property="reason" jdbcType="VARCHAR"/>
        <result column="create_time" property="createTime" jdbcType="TIMESTAMP"/>
        <result column="create_user" property="createUser" jdbcType="BIGINT"/>
        <result column="state" property="state" jdbcType="INTEGER"/>
    </resultMap>
    <sql id="Base_Column_List">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        salary_record_id, customer_id, old_salary, new_salary, effective_date, reason, create_time,
        create_user, state
    </sql>
    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        select
        <include refid="Base_Column_List"/>
        from customer_salary_record
        where salary_record_id = #{salaryRecordId,jdbcType=BIGINT}
    </select>

    <select id="selectByCustomerIdAndEffDate" resultMap="BaseResultMap">
        SELECT
        <include refid="Base_Column_List"/>
        FROM
            customer_salary_record
        WHERE
            customer_id = #{customerId}
        and
        effective_date = #{effDate}
    </select>

    <select id="selectLastRecordByDate" resultMap="BaseResultMap">
        SELECT
        <include refid="Base_Column_List"/>
        FROM
        customer_salary_record
        WHERE
        customer_id = #{customerId}
        and
        effective_date <![CDATA[ <= ]]> #{effDate}
        order by effective_date desc
        limit 1

    </select>

    <select id="selectFirstRecordByDate" resultMap="BaseResultMap">
        SELECT
        <include refid="Base_Column_List"/>
        FROM
        customer_salary_record
        WHERE
        customer_id = #{customerId}
        and
        effective_date >= #{effDate}
        order by effective_date
        limit 1
    </select>

    <select id="selectByDateArea" resultMap="BaseResultMap">
        SELECT
        <include refid="Base_Column_List"/>
        FROM
        customer_salary_record
        WHERE
        customer_id = #{customerId}
        AND effective_date >= #{startDate}
        AND effective_date <![CDATA[ <= ]]> #{endDate}
    </select>

    <!--根据员工ID批量获取新的工资基数-->
    <select id="selectNewSalaryBatch" resultMap="BaseResultMap">
        select
        customer_id,new_salary
        from (
            SELECT
            customer_id,new_salary
            FROM customer_salary_record
            WHERE
            customer_id in
            <foreach item="item" index="index" collection="list" open="(" separator="," close=")">
                #{item}
            </foreach>
             and effective_date <![CDATA[ <= ]]> #{effDate}
            order by effective_date desc)A
            group by A.customer_id
    </select>
</mapper>