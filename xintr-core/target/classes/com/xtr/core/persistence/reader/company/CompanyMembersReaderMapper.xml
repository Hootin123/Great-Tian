<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.xtr.core.persistence.reader.company.CompanyMembersReaderMapper" >


  <resultMap id="BaseResultMap" type="com.xtr.api.domain.company.CompanyMembersBean" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <id column="member_id" property="memberId" jdbcType="BIGINT" />
    <result column="member_company_id" property="memberCompanyId" jdbcType="BIGINT" />
    <result column="member_dep_id" property="memberDepId" jdbcType="BIGINT" />
    <result column="member_name" property="memberName" jdbcType="VARCHAR" />
    <result column="member_power_ids" property="memberPowerIds" jdbcType="VARCHAR" />
    <result column="member_power_names" property="memberPowerNames" jdbcType="VARCHAR" />
    <result column="member_logname" property="memberLogname" jdbcType="VARCHAR" />
    <result column="member_password" property="memberPassword" jdbcType="VARCHAR" />
    <result column="member_password_strength" property="memberPasswordStrength" jdbcType="INTEGER" />
    <result column="member_idcard" property="memberIdcard" jdbcType="VARCHAR" />
    <result column="member_phone" property="memberPhone" jdbcType="VARCHAR" />
    <result column="member_email" property="memberEmail" jdbcType="VARCHAR" />
    <result column="member_rolename" property="memberRolename" jdbcType="VARCHAR" />
    <result column="member_login_errtimes" property="memberLoginErrtimes" jdbcType="INTEGER" />
    <result column="member_login_err_time" property="memberLoginErrTime" jdbcType="TIMESTAMP" />
    <result column="member_isdefault" property="memberIsdefault" jdbcType="INTEGER" />
    <result column="member_sign" property="memberSign" jdbcType="INTEGER" />
    <result column="register_time" property="registerTime" jdbcType="TIMESTAMP"/>
    <result column="company_name" property="companyName" jdbcType="VARCHAR"/>
    <result column="company_isauth" property="companyIsAuth" jdbcType="INTEGER" />
    <result column="member_login_recent_time" property="memberLoginRecentTime" jdbcType="TIMESTAMP" />
    <result column="member_status" property="memberStatus" jdbcType="INTEGER" />
  </resultMap>

  <resultMap id="CompanyMenuBaseResultMap" type="com.xtr.api.domain.company.CompanyMenuBean">
    <id column="id" property="id" jdbcType="BIGINT"/>
    <result column="menu_name" property="menuName" jdbcType="VARCHAR"/>
    <result column="url" property="url" jdbcType="VARCHAR"/>
    <result column="parent_id" property="parentId" jdbcType="BIGINT"/>
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP"/>
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP"/>
    <result column="sort" property="sort" jdbcType="INTEGER"/>
    <result column="menu_icon" property="menuIcon" jdbcType="VARCHAR"/>
    <result column="child_count" property="childCount" jdbcType="VARCHAR"/>
  </resultMap>
  <resultMap id="CompanyMenuDtoMap" type="com.xtr.api.dto.company.CompanyMenuDto"  extends="CompanyMenuBaseResultMap">

  </resultMap>

  <sql id="Company_Menu_Base_Column_List">
    id, menu_name, url, parent_id, create_time, update_time, sort, menu_icon
  </sql>

  <resultMap id="companyRoleBaseResultMap" type="com.xtr.api.domain.company.CompanyRoleBean">
    <id column="id" property="id" jdbcType="BIGINT"/>
    <result column="members_user" property="membersUser" jdbcType="BIGINT"/>
    <result column="update_user" property="updateUser" jdbcType="BIGINT"/>
    <result column="role_name" property="roleName" jdbcType="VARCHAR"/>
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP"/>
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP"/>
    <result column="state" property="state" jdbcType="INTEGER"/>
    <result column="descr" property="descr" jdbcType="VARCHAR"/>
  </resultMap>

  <resultMap id="companyTodoMaterResultMap" type="com.xtr.api.domain.company.TodoMaterBean">
    <id column="mater_id" property="materId" jdbcType="INTEGER"/>
    <result column="mater_content" property="materContent" jdbcType="VARCHAR"/>
    <result column="mater_member_id" property="materMemberId" jdbcType="BIGINT"/>
    <result column="mater_company_id" property="materCompanyId" jdbcType="BIGINT"/>
    <result column="mater_create_time" property="materCreateTime" jdbcType="TIMESTAMP"/>
    <result column="mater_update_time" property="materUpdateTime" jdbcType="TIMESTAMP"/>
    <result column="mater_status" property="materStatus" jdbcType="INTEGER"/>
  </resultMap>

  <resultMap id="menuVisitResultMap" type="com.xtr.api.domain.company.CompanyMenuVisitRecordBean">
    <id column="id" property="id" jdbcType="INTEGER"/>
    <result column="company_id" property="companyId" jdbcType="BIGINT"/>
    <result column="member_id" property="memberId" jdbcType="BIGINT"/>
    <result column="type" property="type" jdbcType="INTEGER"/>
    <result column="visit_time" property="visitTime" jdbcType="TIMESTAMP"/>
    <result column="ip" property="ip" jdbcType="VARCHAR"/>
  </resultMap>

  <sql id="Company_Role_Base_Column_List">
    id, members_user, update_user, role_name, create_time, update_time, state, descr
  </sql>
  <sql id="Base_Column_List" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    member_id, member_company_id, member_dep_id, member_name, member_power_ids, member_power_names, 
    member_logname, member_password, member_password_strength, member_idcard, member_phone, 
    member_email, member_rolename, member_login_errtimes, member_login_err_time, member_isdefault, 
    member_sign,register_time,company_name,member_login_recent_time,member_status

  </sql>


  <sql id="Example_Where_Clause">
      <trim prefix="where" suffixOverrides="," prefixOverrides="AND">
        <if test="memberCompanyId != null" >
          AND member_company_id = #{memberCompanyId,jdbcType=BIGINT},
        </if>
        <if test="memberDepId != null" >
          AND member_dep_id = #{memberDepId,jdbcType=BIGINT},
        </if>
        <if test="memberName != null" >
          AND member_name = #{memberName,jdbcType=VARCHAR},
        </if>
        <if test="memberPowerIds != null" >
          AND member_power_ids = #{memberPowerIds,jdbcType=VARCHAR},
        </if>
        <if test="memberPowerNames != null" >
          AND member_power_names = #{memberPowerNames,jdbcType=VARCHAR},
        </if>
        <if test="memberLogname != null" >
          AND  member_logname = #{memberLogname,jdbcType=VARCHAR},
        </if>
        <if test="memberPassword != null" >
          AND member_password = #{memberPassword,jdbcType=VARCHAR},
        </if>
        <if test="memberPasswordStrength != null" >
          AND member_password_strength = #{memberPasswordStrength,jdbcType=INTEGER},
        </if>
        <if test="memberIdcard != null" >
          AND member_idcard = #{memberIdcard,jdbcType=VARCHAR},
        </if>
        <if test="memberPhone != null" >
          AND member_phone = #{memberPhone,jdbcType=VARCHAR},
        </if>
        <if test="memberEmail != null" >
          AND member_email = #{memberEmail,jdbcType=VARCHAR},
        </if>
        <if test="memberRolename != null" >
          AND member_rolename = #{memberRolename,jdbcType=VARCHAR},
        </if>
        <if test="memberLoginErrtimes != null" >
          AND member_login_errtimes = #{memberLoginErrtimes,jdbcType=INTEGER},
        </if>
        <if test="memberLoginErrTime != null" >
          AND member_login_err_time = #{memberLoginErrTime,jdbcType=TIMESTAMP},
        </if>
        <if test="memberIsdefault != null" >
          AND member_isdefault = #{memberIsdefault,jdbcType=INTEGER},
        </if>
        <if test="memberSign != null" >
          AND member_sign = #{memberSign,jdbcType=INTEGER},
        </if>
        <if test="registerTime != null" >
          AND  register_time = #{registerTime,jdbcType=TIMESTAMP},
        </if>
        <if test="companyName != null" >
          AND company_name = #{companyName,jdbcType=VARCHAR},
        </if>
      </trim>
  </sql>
  <!--根据ID查询用户信息 -->
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from company_members
    where member_id = #{memberId,jdbcType=BIGINT}
  </select>
  <select id="selectByMemberLogname" resultMap="BaseResultMap" parameterType ="java.lang.String" >
    SELECT
    <include refid="Base_Column_List" />,b.company_isauth
    from company_members a
    left join
    (select company_id,company_isauth from companys) b
    on a.member_company_id = b.company_id
    where member_logname =#{memberLogname,jdbcType=VARCHAR}
    order by  register_time desc limit 1
  </select>
  <select id="findByMemberPhone" resultMap="BaseResultMap" parameterType ="java.lang.String" >
    SELECT
    <include refid="Base_Column_List" />,b.company_isauth
    from company_members a
    left join
    (select company_id,company_isauth from companys) b
    on a.member_company_id = b.company_id
    where (member_logname =#{memberLogname,jdbcType=VARCHAR}
    or member_phone =#{memberLogname,jdbcType=VARCHAR})
    and (member_sign=3) and (member_status is null or member_status=1 or member_status=2)
  </select>

  <!-- 根据条件查询记 -->
  <select id="selectByCondition" resultMap="BaseResultMap" parameterType="com.xtr.api.domain.company.CompanyMembersBean"  >
    SELECT
    <include refid="Base_Column_List" />
    from company_members
    WHERE 1 = 1
    <include refid="Example_Where_Clause"/>
  </select>

  <!-- 查询记录数 -->
  <select id="selectCount" resultType="java.lang.Long" parameterType="com.xtr.api.domain.company.CompanyMembersBean">
    SELECT count(1) FROM company_members
    <include refid="Example_Where_Clause"/>
  </select>

  <!--根据登录名查询激活的用户信息 -->
  <select id="selectByLoginNameActive" resultMap="BaseResultMap" parameterType="com.xtr.api.domain.company.CompanyMembersBean" >
    select
    <include refid="Base_Column_List" />
    from company_members
    where member_logname =#{memberLogname,jdbcType=VARCHAR}
    <if test="memberSign != null" >
      AND member_sign = #{memberSign,jdbcType=INTEGER}
    </if>
  </select>

  <!--根据手机号用户信息 -->
  <select id="selectByPhone" resultMap="BaseResultMap" parameterType="com.xtr.api.domain.company.CompanyMembersBean" >
    select
    <include refid="Base_Column_List" />
    from company_members
    where member_phone =#{memberPhone,jdbcType=VARCHAR}
  </select>

  <!--根据手机号查询可以登录的用户 -->
  <select id="selectCanLoginByPhone" resultMap="BaseResultMap" parameterType="com.xtr.api.domain.company.CompanyMembersBean" >
    select
    <include refid="Base_Column_List" />
    from company_members
    where member_phone =#{memberPhone,jdbcType=VARCHAR} and (member_sign=3) and (member_status is null or member_status=1)
  </select>

  <!-- 根据手机号 或者登陆名查询用户信息-->
  <select id="selectByPhoneOrLogname" resultMap="BaseResultMap" parameterType="com.xtr.api.domain.company.CompanyMembersBean">
    select
    <include refid="Base_Column_List" />
    from company_members
    where (member_phone =#{memberPhone,jdbcType=VARCHAR} or  member_logname=#{memberPhone,jdbcType=VARCHAR})
    and (member_sign=3) and (member_status is null or member_status=1 or member_status=2)

  </select>

  <!-- 根据用户id查询子菜单菜单 -->
  <select id="selectMenuByUserId" resultMap="CompanyMenuBaseResultMap" parameterType="java.lang.Long">
    SELECT DISTINCT
    <include refid="Company_Menu_Base_Column_List" />
    FROM company_menu m
    WHERE m.parent_id=0
      AND EXISTS (
      SELECT * FROM company_role_rel r
      WHERE r.obj_id = m.id AND r.rel_type = 0
    <if test="userId != null">
      AND EXISTS (
      SELECT * FROM company_role_rel u WHERE u.rel_type = 1 and r.role_id=u.role_id and u.obj_id =
      #{userId,jdbcType=BIGINT}
      )
    </if>
      )
    ORDER BY sort
  </select>

  <!-- 查询记录数 -->
  <select id="selectCompanyMenuBeanByUserId" resultType="java.util.Map" parameterType="java.lang.Long">
     select group_concat(role_name) as roleName,group_concat(id) as ids from company_role w WHERE EXISTS (SELECT r.role_id from company_role_rel r where r.rel_type=1 and w.id=r.role_id and r.obj_id=#{userId,jdbcType=BIGINT})
  </select>

  <!-- 根据状态查询所属角色 -->
  <select id="selectCompanyRoleBeanByState" resultMap="companyRoleBaseResultMap" parameterType="java.lang.Integer">
    select <include refid="Company_Role_Base_Column_List" />  from company_role where state=#{state,jdbcType=INTEGER}
  </select>

  <!--根据权限用户信息 -->
  <select id="selectByCompanyMembersBean" resultMap="BaseResultMap" parameterType="com.xtr.api.domain.company.CompanyMembersBean" >
    select
    <include refid="Base_Column_List" />
    from company_members
    WHERE 1 = 1
    <if test="memberCompanyId != null" >
      AND member_company_id = #{memberCompanyId,jdbcType=BIGINT}
    </if>
    <if test="memberDepId != null" >
      AND member_dep_id = #{memberDepId,jdbcType=BIGINT}
    </if>
    <if test="memberIsdefault != null" >
      AND member_isdefault = #{memberIsdefault,jdbcType=INTEGER}
    </if>
    <if test="memberStatus != null" >
      AND (member_status != #{memberStatus,jdbcType=INTEGER} or member_status is null)
    </if>
    order by member_isdefault desc,register_time
  </select>


  <select id="selectPrimaryKeyByCompanyMembersBean" resultType="java.lang.Long">
    select member_id from company_members
    WHERE 1 = 1
    <if test="memberCompanyId != null" >
      AND member_company_id = #{memberCompanyId,jdbcType=BIGINT}
    </if>
    <if test="memberDepId != null" >
      AND member_dep_id = #{memberDepId,jdbcType=BIGINT}
    </if>
    <if test="memberIsdefault != null" >
      AND member_isdefault = #{memberIsdefault,jdbcType=INTEGER}
    </if>
  </select>

    <select id="selectCompanyManager" resultMap="BaseResultMap" parameterType="java.lang.Long">
      select
      <include refid="Base_Column_List" />
      from company_members
      where member_isdefault = 1 and member_company_id = #{companyId} limit 1
    </select>
  <!-- 查询当前企业登录用户的待办事项-->
  <select id="selectAllTodomaterByMemberId" parameterType="java.lang.Long" resultMap="companyTodoMaterResultMap">
    select * from todo_mater where mater_member_id=#{memberId} and mater_status = 0
  </select>

  <!--根据员工ID获取菜单的访问权限-->
  <select id="selectCountForMemberVisitMenu" resultType="int">
    select
    count(1)
    from company_role_rel A
    where obj_id=#{memberId,jdbcType=BIGINT} and rel_type=1 and  exists(select role_id from company_role_rel  where rel_type=0 and obj_id=#{menuId,jdbcType=BIGINT} and role_id=A.role_id)
  </select>

  <!--根据菜单名称获取菜单ID-->
  <select id="selectMenuIdByMenuName" resultType="long">
    select
    id
    from company_menu
    where menu_name=#{menuName,jdbcType=VARCHAR}
  </select>
  <!-- 查询用户之前是否访问过该链接-->
  <select id="selectVisitRecord" parameterType="java.util.Map" resultMap="menuVisitResultMap">
    SELECT  id from company_menu_visit_record where
    member_id=#{memberId} and type=#{type} limit 1
  </select>


  <!-- 新版home页面查询所有的一级菜单-->
  <select id="selectMenusByUserId"  resultMap="CompanyMenuDtoMap">
    SELECT DISTINCT
    <include refid="Company_Menu_Base_Column_List" />
    FROM company_menu_copy m
    WHERE m.parent_id=0
    AND EXISTS (
    SELECT * FROM company_role_rel r
    WHERE r.obj_id = m.id AND r.rel_type = 0
    <if test="userId != null">
      AND EXISTS (
      SELECT * FROM company_role_rel u WHERE u.rel_type = 1 and r.role_id=u.role_id and u.obj_id =
      #{userId,jdbcType=BIGINT}
      )
    </if>
    )
    ORDER BY sort
  </select>
  <!-- 新版home页面查询所有的二级菜单-->
  <select id="getChildMenuByUser"  resultMap="CompanyMenuBaseResultMap" >
    SELECT DISTINCT
    <include refid="Company_Menu_Base_Column_List" />
    FROM company_menu_copy m
    WHERE m.parent_id!=0 and m.parent_id=#{id}  and m.parent_id is not null
    AND EXISTS (
    SELECT * FROM company_role_rel r
    WHERE r.obj_id = m.id AND r.rel_type = 0
    <if test="userId != null">
      AND EXISTS (
      SELECT * FROM company_role_rel u WHERE u.rel_type = 1 and r.role_id=u.role_id and u.obj_id =
      #{userId,jdbcType=BIGINT}
      )
    </if>
    )
    ORDER BY sort
  </select>

</mapper>