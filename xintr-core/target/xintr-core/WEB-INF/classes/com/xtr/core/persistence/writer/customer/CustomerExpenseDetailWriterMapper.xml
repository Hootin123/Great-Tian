<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.xtr.core.persistence.writer.customer.CustomerExpenseDetailWriterMapper">
  <resultMap id="BaseResultMap" type="com.xtr.api.domain.customer.CustomerExpenseDetailBean">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="cycle_id" jdbcType="BIGINT" property="cycleId" />
    <result column="company_id" jdbcType="BIGINT" property="companyId" />
    <result column="customer_id" jdbcType="BIGINT" property="customerId" />
    <result column="expense_type" jdbcType="VARCHAR" property="expenseType" />
    <result column="expense_date" jdbcType="DATE" property="expenseDate" />
    <result column="expense_amount" jdbcType="DECIMAL" property="expenseAmount" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
  </resultMap>
  <sql id="Base_Column_List">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    id, cycle_id, company_id, customer_id, expense_type, expense_date, expense_amount, 
    create_time, update_time
  </sql>

  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from customer_expense_detail
    where id = #{id,jdbcType=BIGINT}
  </delete>

  <delete id="deleteByIds">
          delete from customer_expense_detail
          where id in (${deleteIds})
  </delete>

  <insert id="insert" parameterType="com.xtr.api.domain.customer.CustomerExpenseDetailBean">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into customer_expense_detail (id, cycle_id, company_id, 
      customer_id, expense_type, expense_date, 
      expense_amount, create_time, update_time
      )
    values (#{id,jdbcType=BIGINT}, #{cycleId,jdbcType=BIGINT}, #{companyId,jdbcType=BIGINT}, 
      #{customerId,jdbcType=BIGINT}, #{expenseType,jdbcType=VARCHAR}, #{expenseDate,jdbcType=DATE}, 
      #{expenseAmount,jdbcType=DECIMAL}, #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.xtr.api.domain.customer.CustomerExpenseDetailBean">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into customer_expense_detail
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="cycleId != null">
        cycle_id,
      </if>
      <if test="companyId != null">
        company_id,
      </if>
      <if test="customerId != null">
        customer_id,
      </if>
      <if test="expenseType != null">
        expense_type,
      </if>
      <if test="expenseDate != null">
        expense_date,
      </if>
      <if test="expenseAmount != null">
        expense_amount,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="cycleId != null">
        #{cycleId,jdbcType=BIGINT},
      </if>
      <if test="companyId != null">
        #{companyId,jdbcType=BIGINT},
      </if>
      <if test="customerId != null">
        #{customerId,jdbcType=BIGINT},
      </if>
      <if test="expenseType != null">
        #{expenseType,jdbcType=VARCHAR},
      </if>
      <if test="expenseDate != null">
        #{expenseDate,jdbcType=DATE},
      </if>
      <if test="expenseAmount != null">
        #{expenseAmount,jdbcType=DECIMAL},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.xtr.api.domain.customer.CustomerExpenseDetailBean">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update customer_expense_detail
    <set>
      <if test="cycleId != null">
        cycle_id = #{cycleId,jdbcType=BIGINT},
      </if>
      <if test="companyId != null">
        company_id = #{companyId,jdbcType=BIGINT},
      </if>
      <if test="customerId != null">
        customer_id = #{customerId,jdbcType=BIGINT},
      </if>
      <if test="expenseType != null">
        expense_type = #{expenseType,jdbcType=VARCHAR},
      </if>
      <if test="expenseDate != null">
        expense_date = #{expenseDate,jdbcType=DATE},
      </if>
      <if test="expenseAmount != null">
        expense_amount = #{expenseAmount,jdbcType=DECIMAL},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.xtr.api.domain.customer.CustomerExpenseDetailBean">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update customer_expense_detail
    set cycle_id = #{cycleId,jdbcType=BIGINT},
      company_id = #{companyId,jdbcType=BIGINT},
      customer_id = #{customerId,jdbcType=BIGINT},
      expense_type = #{expenseType,jdbcType=VARCHAR},
      expense_date = #{expenseDate,jdbcType=DATE},
      expense_amount = #{expenseAmount,jdbcType=DECIMAL},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=BIGINT}
  </update>

  <update id="batchUpdateExpense">
    UPDATE
    customers c
    INNER JOIN customers_station cs ON cs.station_customer_id = c.customer_id
    SET c.customer_current_expense = floor(c.customer_current_salary * ${bbl}), c.customer_is_expense = 1
    WHERE
    c.customer_company_id = #{companyId}
    AND cs.station_customer_state &lt; 3
    <if test="bgt != null and blt != null">
      AND (
      c.customer_current_salary >= ${bgt}
      AND
      c.customer_current_salary &lt;= ${blt}
      )
    </if>
    <if test="bgt == null and blt != null">
      AND c.customer_current_salary &lt;= ${blt}
    </if>
    <if test="bgt != null and blt == null">
      AND c.customer_current_salary >= ${bgt}
    </if>
  </update>

  <update id="updateExpenseStatus">
    update customers set customer_is_expense = 0 where customer_current_salary &lt; customer_current_expense
  </update>

  <update id="updatePayRollStatusByBatch">
      update customer_payroll
        set is_payrule_update = 1
        where
        customer_id in (
          select customer_id from customers
          WHERE
          customer_company_id = #{companyId}
          <if test="bgt != null and blt != null">
            AND (
            customer_current_salary >= ${bgt}
            AND
            customer_current_salary &lt;= ${blt}
            )
          </if>
          <if test="bgt == null and blt != null">
            AND customer_current_salary &lt;= ${blt}
          </if>
          <if test="bgt != null and blt == null">
            AND customer_current_salary >= ${bgt}
          </if>
        )
        and pay_cycle_id = #{cycleId}
  </update>

</mapper>